{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Projec",
				"ProjectService"
			],
			[
				"tim",
				"timeEntries"
			],
			[
				"update",
				"updatedProject"
			],
			[
				"ac",
				"activeProjectId"
			],
			[
				"new",
				"newTimeEntry"
			],
			[
				"get",
				"getProjectWithId"
			],
			[
				"time",
				"timeEntries"
			],
			[
				"timeE",
				"timeEntryId"
			],
			[
				"act",
				"activeTimeEntry"
			],
			[
				"pr",
				"promise"
			],
			[
				"start",
				"startTime"
			],
			[
				"t",
				"then"
			],
			[
				"up",
				"updateProject"
			],
			[
				"projet",
				"projects"
			],
			[
				"de",
				"description"
			],
			[
				"fun",
				"function"
			],
			[
				"E",
				"Email"
			],
			[
				"L",
				"LicentioUser"
			]
		]
	},
	"buffers":
	[
		{
			"file": "test/spec/controllers/DashboardTimeEntries.js",
			"settings":
			{
				"buffer_size": 82,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 9542 files for \"restangular\"\n\n/Users/jiar/git/tps/yo/bower.json:\n   13      \"font-awesome\": \"~3.2.1\",\n   14      \"lodash\": \"~1.3.1\",\n   15:     \"restangular\": \"~1.1.3\",\n   16      \"alertify\": \"~0.3.9\",\n   17      \"angular-tokenauth\": \"~0.0.6\",\n\n/Users/jiar/git/tps/yo/app/index.html:\n  144          <script src=\"bower_components/angular-resource/angular-resource.js\"></script>        \n  145          <script src=\"bower_components/lodash/lodash.js\"></script>\n  146:         <script src=\"bower_components/restangular/dist/restangular.js\"></script>\n  147          <script src=\"bower_components/angular-cookies/angular-cookies.js\"></script>\n  148          <script src=\"bower_components/angular-sanitize/angular-sanitize.js\"></script>\n\n/Users/jiar/git/tps/yo/app/bower_components/restangular/.bower.json:\n    1  {\n    2:   \"name\": \"restangular\",\n    3    \"version\": \"1.1.3\",\n    4:   \"main\": \"./dist/restangular.min.js\",\n    5    \"description\": \"Restful Resources service for AngularJS apps\",\n    6    \"repository\": {\n    7      \"type\": \"git\",\n    8:     \"url\": \"git://github.com/mgonto/restangular.git\"\n    9    },\n   10    \"dependencies\": {\n   ..\n   17      \"lib\"\n   18    ],\n   19:   \"homepage\": \"https://github.com/mgonto/restangular\",\n   20    \"_release\": \"1.1.3\",\n   21    \"_resolution\": {\n   ..\n   24      \"commit\": \"8489fbedeb9cd3d0c8d8728964b80c1e32bd97d4\"\n   25    },\n   26:   \"_source\": \"git://github.com/mgonto/restangular.git\",\n   27    \"_target\": \"~1.1.3\",\n   28:   \"_originalSource\": \"restangular\"\n   29  }\n\n/Users/jiar/git/tps/yo/app/bower_components/restangular/bower.json:\n    1  {\n    2:   \"name\": \"restangular\",\n    3    \"version\": \"1.1.3\",\n    4:   \"main\": \"./dist/restangular.min.js\",\n    5    \"description\": \"Restful Resources service for AngularJS apps\",\n    6    \"repository\": {\n    7      \"type\": \"git\",\n    8:     \"url\": \"git://github.com/mgonto/restangular.git\"\n    9    },\n   10    \"dependencies\": {\n\n/Users/jiar/git/tps/yo/app/bower_components/restangular/CHANGELOG.md:\n    1  #1.0.11\n    2  * Documentation Typo fixes\n    3: * errorInterceptor can now stop Restangular from rejecting the promise\n    4  * Bugfix fot method override on DELETE. Now it works\n    5  \n    6  #1.0.9\n    7: * **BREAKING CHANGE**: Restangular methods created with `addRestangularMethod` will change its signature depending on the opreation. If the operation is safe (GET, OPTIONS, etc.), the signature is methodName(params, headers, elemForBody). If it's not safe (POST, PUT, etc.), the signature is methodName(elemForBody, params, headers). This is to facilitate using them as when it's not safe, you're usually going to set a body\n    8  * Now you can configure default request parameters per method and for everything as well\n    9  * Added the ability to use Cannonical IDs. They're used if you need to change Primary Key (ID) of the element (Really weird case).\n   ..\n   26  * Added `fullResponse` for getting the full `$http` response in every call\n   27  * Improved documentation on `addElemTransformer`\n   28: * Configuration can be set globally on either `RestangularProvider` or `Restangular`\n   29  \n   30  #0.8.9\n   ..\n   54  \n   55  #0.7.3\n   56: * All configuration can be done via either `Restangular` or `RestangularProvider`\n   57: * url field now is called getRestangularUrl\n   58: * `id` configuration from `restangularFields` now accepts nested (dotted) properties\n   59  \n   60  #0.7.1\n   ..\n   63  #0.7.0\n   64  * RequestInterceptor wasn't being called in getList\n   65: * Removed extra `/` when no restangularWhat is provided. This is fixed by Angular's team since version 1.1.5 but this fixes it for all versions including 1.0.X\n   66  * Added documentation for supported AngularJS versions\n   67  * Added url method to elements which returns the URL of the current object\n   ..\n   72  # 0.6.7\n   73  * Bug fix for a regresion error using _.omit\n   74: * Added element transformers to transform any Restangularized element.\n   75  * Added putElement method to collection to put a certain element at an index and return a promise of the updated array.\n   76  \n   77  # 0.6.5\n   78: * Added `Restangular.copy` for copying objects\n   79  \n   80  # 0.6.4\n   ..\n   89  \n   90  # 0.6.1\n   91: * Elements are striped from Restangular fields before being sent to the server\n   92  \n   93  # 0.6.0\n   94  * Fixed bug when adding metadata to response in ResopnseExtractor. It wasn't being added\n   95: * Added enhanced promises. [Check the section in README](https://github.com/mgonto/restangular/blob/master/README.md#enhanced-promises).\n   96  \n   97  # 0.5.5\n   ..\n  100  \n  101  # 0.5.4\n  102: * Added onElemRestangularized hook\n  103: * Added posibility to add your own Restangular methods\n  104  \n  105  # 0.5.3\n  ...\n  110  * responseExtractor renamed to responseInterceptor. Added alias from responseExtractor to responseInterceptor to mantain backwards compatibility\n  111  * responseExtractor now receives 4 parameters. Response, operation, what (path of current element) and URL\n  112: * Error function for any Restangular action now receives a response to get StatusCode and other interesting stuff\n  113  \n  114  # 0.5.1\n  ...\n  118  * Added `requestSuffix`configuration for requests ending en .json\n  119  * `what` field is now configurable and not hardcoded anymore\n  120: * All instance variables from `RestangularProvider` are now local variables to reduce visibility\n  121  * Fully functional version with all desired features\n  122  \n  123  # 0.4.6\n  124: * Added Custom methods to all Restangular objects. Check it out in the README\n  125  \n  126  # 0.4.5\n  ...\n  137  \n  138  # 0.3.3\n  139: * Restangular fields can now be configured. You can set the id, route and parentResource fields. They're not hardcoded anymore\n  140  \n  141  # 0.3.2\n\n/Users/jiar/git/tps/yo/app/bower_components/restangular/CONTRIBUTE.md:\n   13  ```\n   14  \n   15: All changes must be done in src/restangular.js and then after running grunt all changes will be submited to dist/\n   16  \n   17  Please submit a Pull Request or create issues for anything you want :).\n\n/Users/jiar/git/tps/yo/app/bower_components/restangular/Gruntfile.js:\n   28      },\n   29      zip: {\n   30:       '<%= dirs.dest %>/restangular.zip': ['<%= dirs.dest %>/<%= pkg.name %>.js', '<%= dirs.dest %>/<%= pkg.name %>.min.js']\n   31      },\n   32      bowerInstall: {\n\n/Users/jiar/git/tps/yo/app/bower_components/restangular/karma.conf.js:\n   16        'http://code.angularjs.org/1.1.4/angular-mocks.js',\n   17        'http://cdnjs.cloudflare.com/ajax/libs/lodash.js/1.2.0/lodash.min.js',\n   18:       'src/restangular.js',\n   19        'test/*.js'\n   20      ],\n\n/Users/jiar/git/tps/yo/app/bower_components/restangular/karma.underscore.conf.js:\n   16        'http://code.angularjs.org/1.1.4/angular-mocks.js',\n   17        'http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.4/underscore-min.js',\n   18:       'src/restangular.js',\n   19        'test/*.js'\n   20      ],\n\n/Users/jiar/git/tps/yo/app/bower_components/restangular/package.json:\n    1  {\n    2:   \"name\": \"restangular\",\n    3    \"description\": \"Restful Resources service for AngularJS apps\",\n    4    \"version\": \"1.1.3\",\n    5:   \"filename\": \"restangular.min.js\",\n    6:   \"main\": \"./dist/restangular.min.js\",\n    7:   \"homepage\": \"https://github.com/mgonto/restangular\",\n    8    \"author\": \"Martin Gontovnikas <martin@gonto.com.ar>\",\n    9    \"repository\": {\n   10      \"type\": \"git\",\n   11:     \"url\": \"git://github.com/mgonto/restangular.git\"\n   12    },\n   13    \"engines\": {\n\n/Users/jiar/git/tps/yo/app/bower_components/restangular/README.md:\n    1: #Restangular\n    2  \n    3: [![Build Status](https://travis-ci.org/mgonto/restangular.png)](https://travis-ci.org/mgonto/restangular)\n    4: <a href=\"https://twitter.com/intent/tweet?hashtags=&original_referer=http%3A%2F%2Fgithub.com%2F&text=Check+out+Restangular%2C+a+service+for+%23AngularJS+that+makes+it+easy+to+use+Res+APIs&tw_p=tweetbutton&url=https%3A%2F%2Fgithub.com%2Fmgonto%2Frestangular\" target=\"_blank\">\n    5    <img src=\"http://jpillora.com/github-twitter-button/img/tweet.png\"></img>\n    6  </a>\n    7  \n    8: Restangular is an AngularJS service that will help you get, delete and update Restful Resources with very few lines in the Client side. \n    9  This service is a perfect fit for any WebApp that uses Restful Resources as the API for your application.\n   10  \n   11: **If you want to check a live example, [please click this link to plunkr](http://plnkr.co/edit/d6yDka?p=preview).** It's the same example as [Angular's Javascript Projects](http://angularjs.org/#wire-up-a-backend) but Restangularized.\n   12  \n   13  #Table of contents\n   14  \n   15: - [Restangular](#restangular)\n   16  - [Table of contents](#table-of-contents)\n   17  	- [Differences with $resource](#differences-with-resource)\n   ..\n   20  - [Starter Guide](#starter-guide)\n   21  	- [Quick configuration for Lazy Readers](#quick-configuration-for-lazy-readers)\n   22: 	- [Adding dependency to Restangular module in your app](#adding-dependency-to-restangular-module-in-your-app)\n   23: 	- [Using Restangular](#using-restangular)\n   24: 		- [Creating Main Restangular object](#creating-main-restangular-object)\n   25  		- [Let's code!](#lets-code)\n   26: 	- [Configuring Restangular](#configuring-restangular)\n   27  		- [Properties](#properties)\n   28  			- [setBaseUrl](#setbaseurl)\n   ..\n   31  			- [setDefaultHttpFields](#setdefaulthttpfields)\n   32  			- [addElementTransformer](#addelementtransformer)\n   33: 			- [setOnElemRestangularized](#setonelemrestangularized)\n   34  			- [setResponseInterceptor (or setResponseExtractor. It's an Alias)](#setresponseinterceptor-or-setresponseextractor-its-an-alias)\n   35  			- [setRequestInterceptor](#setrequestinterceptor)\n   36  			- [setFullRequestInterceptor](#setfullrequestinterceptor)\n   37  			- [setErrorInterceptor](#seterrorinterceptor)\n   38: 			- [setRestangularFields](#setrestangularfields)\n   39  			- [setMethodOverriders](#setmethodoverriders)\n   40  			- [setDefaultRequestParams](#setdefaultrequestparams)\n   ..\n   46  			- [Configuring in the config](#configuring-in-the-config)\n   47  			- [Configuring in the run](#configuring-in-the-run)\n   48: 		- [How to create a Restangular service with a different configuration from the global one](#how-to-create-a-restangular-service-with-a-different-configuration-from-the-global-one)\n   49  	- [Methods description](#methods-description)\n   50: 		- [Restangular methods](#restangular-methods)\n   51  		- [Element methods](#element-methods)\n   52  		- [Collection methods](#collection-methods)\n   ..\n   56  	- [Using Self reference resources](#using-self-reference-resources)\n   57  	- [URL Building](#url-building)\n   58: 	- [Creating new Restangular Methods](#creating-new-restangular-methods)\n   59  	- [Adding Custom Methods to Collections](#adding-custom-methods-to-collections)\n   60  		- [Example:](#example)\n   ..\n   63  - [FAQ](#faq)\n   64  			- [How can I handle errors?](#how-can-i-handle-errors)\n   65: 			- [I need to send one header in EVERY Restangular request, how do I do this?](#i-need-to-send-one-header-in-every-restangular-request-how-do-i-do-this)\n   66  			- [Can I cache requests?](#can-i-cache-requests)\n   67  			- [Can it be used in $routeProvider.resolve?](#can-it-be-used-in-routeproviderresolve)\n   68  			- [My response is actually wrapped with some metadata. How do I get the data in that case?](#my-response-is-actually-wrapped-with-some-metadata-how-do-i-get-the-data-in-that-case)\n   69  			- [I use Mongo and the ID of the elements is _id not id as the default. Therefore requests are sent to undefined routes](#i-use-mongo-and-the-id-of-the-elements-is-_id-not-id-as-the-default-therefore-requests-are-sent-to-undefined-routes)\n   70: 			- [How do I handle CRUD operations in a List returned by Restangular?](#how-do-i-handle-crud-operations-in-a-list-returned-by-restangular)\n   71  			- [When I set baseUrl with a port, it's stripped out.](#when-i-set-baseurl-with-a-port-its-stripped-out)\n   72: 			- [How can I access the unrestangularized element as well as the restangularized one?](#how-can-i-access-the-unrestangularized-element-as-well-as-the-restangularized-one)\n   73  			- [Why does this depend on Lodash / Underscore?](#why-does-this-depend-on-lodash--underscore)\n   74  - [Supported Angular versions](#supported-angular-versions)\n   ..\n   79  ## Differences with $resource\n   80  \n   81: Restangular has several features that distinguish it from $resource:\n   82  \n   83  * **It uses [promises](http://docs.angularjs.org/api/ng.$q)**. Instead of doing the \"magic\" filling of objects like $resource, it uses promises.\n   84: * **You can use this in $routeProvider.resolve**. As Restangular returns promises, you can return any of the methods in the `$routeProvider.resolve` and you'll get the real object injected into your controller if you want.\n   85: * **It doesn't have all those `$resource` bugs**. Restangular doesn't have problem with trailling slashes, additional `:` in the URL, escaping information, expecting only arrays for getting lists, etc.\n   86  * **It supports all HTTP methods**.\n   87  * **It supports ETag out of the box**. You don't have to do anything. ETags and If-None-Match will be used in all of your requests\n   88  * *It supports self linking elements** If you receive from the server some item that has a link to itself, you can use that to query the server instead of writing the URL manually.\n   89: * **You don't have to create one $resource object per request**. Each time you want to do a request, you can just do it using the object that was returned by Restangular. You don't need to create a new object for this.\n   90  * **You don't have to write or remember ANY URL**. With $resource, you need to write the URL Template. In here, you don't write any urls. You just write the name of the resource you want to fetch and that's it.\n   91: * **It supports nested RestFUL resources**. If you have Nested RestFUL resources, Restangular can handle them for you. You don't have to know the URL, the path, or anything to do all of the HTTP operations you want.\n   92: * **Restangular lets you create your own methods**. You can create your own methods to run the operation that you want. The sky is the limit.\n   93: * **Support for wrapped responses**. If your response for a list of element actually returns an object with some property inside which has the list, it's very hard to use $resource. Restangular knows that and it makes it easy on you. Check out https://github.com/mgonto/restangular#my-response-is-actually-wrapped-with-some-metadata-how-do-i-get-the-data-in-that-case\n   94: * **You can build your own URLs with Restangular objects easily**. Restangular lets you create a Restangular object for any url you want with a really nice builder.\n   95  \n   96  Let's see a quick and short example of these features\n   97  ````javascript\n   98  // It uses promises.\n   99: Restangular.one('users').getList().then(function(users) {\n  100    $scope.user = users[0];\n  101  })\n  ...\n  121  You can download this by:\n  122  \n  123: * Using bower and running `bower install restangular`\n  124: * Using npm and running `npm install restangular`\n  125: * Downloading it manually by clicking [here to download development unminified version](https://raw.github.com/mgonto/restangular/master/dist/restangular.js) or [here to download minified production version](https://raw.github.com/mgonto/restangular/master/dist/restangular.min.js)\n  126: * Using [JsDelivr CDN files](https://github.com/jimaek/jsdelivr/tree/master/files/restangular):\n  127  \n  128  ````html\n  129  <!-- Use LATEST folder to always get the latest version-->\n  130: <script type=\"text/javascript\" src=\"http://cdn.jsdelivr.net/restangular/latest/restangular.js\"></script>\n  131: <script type=\"text/javascript\" src=\"http://cdn.jsdelivr.net/restangular/latest/restangular.min.js\"></script>\n  132  \n  133  <!-- Or use TAG number for specific version -->\n  134: <script type=\"text/javascript\" src=\"http://cdn.jsdelivr.net/restangular/0.6.1/restangular.js\"></script>\n  135: <script type=\"text/javascript\" src=\"http://cdn.jsdelivr.net/restangular/0.6.1/restangular.min.js\"></script>\n  136  ````\n  137  \n  ...\n  139  #Dependencies\n  140  \n  141: Restangular depends on Angular and (Underscore or Lodash). **angular-resource is no longer needed since version 1.0.6, now this uses `$http` instead of `$resource`**\n  142  \n  143  #Starter Guide\n  ...\n  147  \n  148  ````javascript\n  149: angular.module('sample-app', ['restangular'])\n  150:   .config(function(RestangularProvider) {\n  151:     RestangularProvider.setBaseUrl(\"/api/v1\");\n  152    });\n  153    \n  154: angular.module('sample-app').controller('MainCtrl', function($scope, Restangular) {\n  155:   $scope.projects = Restangular.all('projects').getList();\n  156  });\n  157  ````\n  158  \n  159: ## Adding dependency to Restangular module in your app\n  160  \n  161: The first thing you need to do after adding the link to your script file, is mentioning in your app that you'll use Restangular.\n  162  \n  163  ````javascript\n  164: var app = angular.module('angularjs-starter', ['restangular']);\n  165  ````\n  166  \n  167: ## Using Restangular\n  168  \n  169  Now that you have everything configured, you can just inject this Service to any Controller or Directive like any other :)\n  170  \n  171: ### Creating Main Restangular object\n  172  \n  173: There are 2 ways of creating a main Restangular object. \n  174  The first one and most common one is by stating the main route of all requests. \n  175  The second one is by stating the main route and object of all requests.\n  ...\n  177  ````javascript\n  178  // Only stating main route\n  179: Restangular.all('accounts')\n  180  \n  181  // Stating main object\n  182: Restangular.one('accounts', 1234)\n  183  ````\n  184  \n  ...\n  188  \n  189  ````javascript\n  190: // First way of creating a Restangular object. Just saying the base URL\n  191: var baseAccounts = Restangular.all('accounts');\n  192  \n  193  // This will query /accounts and return a promise. As Angular supports setting promises to scope variables\n  ...\n  201  \n  202  // GET to http://www.google.com/ You set the URL in this case\n  203: Restangular.allUrl('googlers', 'http://www.google.com/').getList();\n  204  \n  205  // GET to http://www.google.com/1 You set the URL in this case\n  206: Restangular.oneUrl('googlers', 'http://www.google.com/1').get();\n  207  \n  208  // You can do RequestLess \"connections\" if you need as well\n  209  \n  210  // Just ONE GET to /accounts/123/buildings/456\n  211: Restangular.one('accounts', 123).one('buildings', 456).get()\n  212  \n  213  // Just ONE GET to /accounts/123/buildings\n  214: Restangular.one('accounts', 123).getList('buildings')\n  215  \n  216  // Here we use Promises then \n  ...\n  230    \n  231    // If we wanted to keep the original as it is, we can copy it to a new element\n  232:   var editFirstAccount = Restangular.copy(firstAccount);\n  233    editFirstAccount.name = \"New Name\";\n  234    \n  ...\n  278  })\n  279  \n  280: // Second way of creating Restangular object. URL and ID :)\n  281: var account = Restangular.one(\"accounts\", 123);\n  282  \n  283  // GET /accounts/123?single=true\n  ...\n  290  ````\n  291  \n  292: ## Configuring Restangular\n  293  \n  294  ### Properties\n  295: Restangular comes with defaults for all of its properties but you can configure them. **So, if you don't need to configure something, there's no need to add the configuration.**\n  296: You can set all these configurations in **`RestangularProvider` or `Restangular` service to change the global configuration** or you can **use the withConfig method in Restangular service to create a new Restangular service with some scoped configuration**. Check the section on this later.\n  297  \n  298  #### setBaseUrl\n  ...\n  303  \n  304  #### setParentless\n  305: Use this property to control whether Restangularized elements to have a parent or not. So, for example if you get an account and then get a nested list of buildings, you may want the buildings URL to be simple `/buildings/123` instead of `/accounts/123/buildings/123`. This property lets you do that.\n  306  \n  307  This method accepts 2 parameters:\n  ...\n  311  \n  312  #### setDefaultHttpFields\n  313: `$http` from AngularJS can receive a bunch of parameters like `cache`, `transformRequest` and so on. You can set all of those properties in the object sent on this setter so that they will be used in EVERY API call made by Restangular. This is very useful for caching for example. All properties that can be set can be checked here: http://docs.angularjs.org/api/ng.$http#Parameters\n  314  \n  315  #### addElementTransformer\n  316: This is a hook. After each element has been \"restangularized\" (Added the new methods from Restangular), the corresponding transformer will be called if it fits. \n  317  \n  318  This should be used to add your own methods / functions to entities of certain types.\n  ...\n  320  You can add as many element transformers as you want. The signature of this method can be one of the following:\n  321  \n  322: * **addElementTransformer(route, transformer)**: Transformer is called with all elements that have been restangularized, no matter if they're collections or not.\n  323  \n  324: * **addElementTransformer(route, isCollection, transformer)**: Transformer is called with all elements that have been restangularized and match the specification regarding if it's a collection or not (true | false)\n  325  \n  326  \n  327: #### setOnElemRestangularized\n  328: This is a hook. After each element has been \"restangularized\" (Added the new methods from Restangular), this will be called. It means that if you receive a list of objects in one call, this method will be called first for the collection and then for each element of the collection.\n  329  \n  330: **I favor the usage of `addElementTransformer` instead of `onElemRestangularized` whenever possible as the implementation is much cleaner.**\n  331  \n  332  \n  333  This callback is a function that has 3 parameters:\n  334  \n  335: * **elem**: The element that has just been restangularized. Can be a collection or a single element.\n  336  * **isCollection**: Boolean indicating if this is a collection or a single element.\n  337  * **what**: The model that is being modified. This is the \"path\" of this resource. For example `buildings`\n  338: * **Restangular**: The instanced service to use any of its methods\n  339   \n  340: This can be used together with `addRestangularMethod` (Explained later) to add custom methods to an element\n  341  \n  342  \n  ...\n  353  Some of the use cases of the responseInterceptor are handling wrapped responses and enhancing response elements with more methods among others.\n  354  \n  355: The responseInterceptor must return the restangularized data element.\n  356  \n  357  #### setRequestInterceptor\n  ...\n  376  The errorInterceptor is called whenever there's an error. It's a function that receives the response as a parameter.\n  377  \n  378: The errorInterceptor function, whenever it returns `false`, prevents the promise linked to a Restangular request to be executed.\n  379  All other return values (besides `false`) are ignored and the promise follows the usual path, eventually reaching the success or error hooks.\n  380  \n  381: The feature to prevent the promise to complete is usefull whenever you need to intercept each Restangular error response for every request in your AngularJS application in a single place, increasing debugging capabilities and hooking security features in a single place.\n  382  \n  383: #### setRestangularFields\n  384  \n  385: Restangular required 3 fields for every \"Restangularized\" element. This are:\n  386  \n  387  * id: Id of the element. Default: id\n  388  * route: Name of the route of this element. Default: route\n  389  * parentResource: The reference to the parent resource. Default: parentResource\n  390: * restangularCollection: A boolean indicating if this is a collection or an element. Default: restangularCollection\n  391  * cannonicalId: If available, the path to the cannonical ID to use. Usefull for PK changes\n  392: * etag: Where to save the ETag received from the server. Defaults to `restangularEtag`\n  393  * selfLink: The path to the property that has the URL to this item. If your REST API doesn't return a URL to an item, you can just leave it blank. Defaults to `href`\n  394  \n  395: All of these fields except for `id` and `selfLink` are handled by Restangular, so most of the time you won't change them. You can configure the name of the property that will be binded to all of this fields by setting restangularFields property.\n  396  \n  397  #### setMethodOverriders\n  398  \n  399: You can now Override HTTP Methods. You can set here the array of methods to override. All those methods will be sent as POST and Restangular will add an X-HTTP-Method-Override header with the real HTTP method we wanted to do.\n  400  \n  401  #### setDefaultRequestParams\n  ...\n  403  You can set default Query parameters to be sent with every request and every method.\n  404  \n  405: Additionally, if you want to configure request params per method, you can use `requestParams` configuration similar to `$http`. For example `RestangularProvider.requestParams.get = {single: true}`.\n  406  \n  407  Supported method to configure are: remove, get, post, put, common (all)\n  ...\n  409  #### setFullResponse\n  410  \n  411: You can set fullResponse to true to get the whole response every time you do any request. The full response has the restangularized data in the `data` field, and also has the headers and config sent. By default, it's set to false.\n  412  \n  413  #### setDefaultHeaders\n  ...\n  425  ### How to configure them globally\n  426  \n  427: You can configure this in either the `config` or the `run` method. If your configurations don't need any other services, then I'd recommend you do them in the `config`. If your configurations depend on other services, you can configure them in the `run` using `Restangular` instead of `RestangularProvider` \n  428  \n  429  #### Configuring in the `config`\n  430  ````javascript\n  431: app.config(function(RestangularProvider) {\n  432:     RestangularProvider.setBaseUrl('/api/v1');\n  433:     RestangularProvider.setExtraFields(['name']);\n  434:     RestangularProvider.setResponseExtractor(function(response, operation) {\n  435          return response.data;\n  436      });\n  437      \n  438:     RestangularProvider.addElementTransformer('accounts', false, function(element) {\n  439         element.accountName = 'Changed';\n  440         return element;\n  441      });\n  442      \n  443:     RestangularProvider.setDefaultHttpFields({cache: true});\n  444:     RestangularProvider.setMethodOverriders([\"put\", \"patch\"]);\n  445      \n  446      // In this case we are mapping the id of each element to the _id field.\n  447:     // We also change the Restangular route. \n  448      // The default value for parentResource remains the same.\n  449:     RestangularProvider.setRestangularFields({\n  450        id: \"_id\",\n  451:       route: \"restangularRoute\",\n  452        selfLink: \"self.href\"\n  453      });\n  454      \n  455:     RestangularProvider.setRequestSuffix('.json');\n  456      \n  457      // Use Request interceptor\n  458:     RestangularProvider.setRequestInterceptor(function(element, operation, route, url) {\n  459        delete element.name;\n  460        return element;\n  ...\n  462      \n  463      // ..or use the full request interceptor, setRequestInterceptor's more powerful brother!\n  464:     RestangularProvider.setFullRequestInterceptor(function(element, operation, route, url, headers, params) {\n  465        delete element.name;      \n  466        return {\n  ...\n  479  ````javascript\n  480  // Here I inject the service BaseUrlCalculator which I need\n  481: app.run(function(Restangular, BaseUrlCalculator) {\n  482:     Restangular.setBaseUrl(BaseUrlCalculator.calculate());\n  483  });\n  484  ````\n  485  \n  486: ### How to create a Restangular service with a different configuration from the global one\n  487: Let's assume that for most requests you need some configuration (The global one), and for just a bunch of methods you need another configuration. In that case, you'll need to create another Restangular service with this particular configuration. This scoped configuration will inherit all defaults from the global one. Let's see how.\n  488  \n  489  ````javascript\n  490  // Global configuration\n  491: app.config(function(RestangularProvider) {\n  492:   RestangularProvider.setBaseUrl('http://www.google.com');\n  493:   RestangularProvider.setRequestSuffix('.json');\n  494  });\n  495  \n  496: // Restangular service that uses Bing\n  497: app.factory('BingRestangular', function(Restangular) {\n  498:   return Restangular.withConfig(function(RestangularConfigurer) {\n  499:     RestangularConfigurer.setBaseUrl('http://www.bing.com');\n  500    });\n  501  });\n  502  \n  503  // Let's use them from a controller\n  504: app.controller('MainCtrl', function(Restangular, BingRestangular) {\n  505    \n  506    // GET to http://www.google.com/users.json\n  507    // Uses global configuration\n  508:   Restangular.all('users').getList()\n  509    \n  510    // GET to http://www.bing.com/users.json\n  511    // Uses Bing configuration which is based on Global one, therefore .json is added.\n  512:   BingRestangular.all('users').getList()\n  513  });\n  514  ````\n  ...\n  518  There are 3 sets of methods. Collections have some methods and elements have others. There are are also some common methods for all of them\n  519  \n  520: ### Restangular methods\n  521: This are the methods that can be called in the Restangular object.\n  522: * **one(route, id)**: This will create a new Restangular object that is just a pointer to one element with the route `route` and the specified id.\n  523: * **all(route)**: This will create a new Restangular object that is just a pointer to a list of elements for the specified path.\n  524: * **oneUrl(route, url)**: This will create a new Restangular object that is just a pointer to one element with the specified URL.\n  525: * **allUrl(route, url)**: This creates a Restangular object that is just a pointer to a list at the specified URL.\n  526  * **copy(fromElement)**: This will create a copy of the from element so that we can modified the copied one.\n  527: * **restangularizeElement(parent, element, route)**: Restangularizes a new element\n  528: * **restangularizeCollection(parent, element, route)**: Restangularizes a new collection\n  529  \n  530  ### Element methods\n  ...\n  540  * **one(route, id)**: Used for RequestLess connections and URL Building. See section below.\n  541  * **all(route)**: Used for RequestLess connections and URL Building. See section below.\n  542: * **oneUrl(route, url)**: This will create a new Restangular object that is just a pointer to one element with the specified URL.\n  543: * **allUrl(route, url)**: This creates a Restangular object that is just a pointer to a list at the specified URL.\n  544: * **getRestangularUrl()**: Gets the URL of the current object.\n  545  \n  546  ### Collection methods\n  ...\n  552  * **patch([queryParams, headers])**: Does a PATCH\n  553  * **putElement(idx, params, headers)**: Puts the element on the required index and returns a promise of the updated new array\n  554: * **getRestangularUrl()**: Gets the URL of the current object.\n  555  * **one(route, id)**: Used for RequestLess connections and URL Building. See section below.\n  556  * **all(route)**: Used for RequestLess connections and URL Building. See section below.\n  557: * **oneUrl(route, url)**: This will create a new Restangular object that is just a pointer to one element with the specified URL.\n  558: * **allUrl(route, url)**: This creates a Restangular object that is just a pointer to a list at the specified URL.\n  559  \n  560  \n  ...\n  566  * **customPUT([elem, path, params, headers])**: Does a PUT to the specific path. Optionally you can set params and headers and elem. Elem is the element to post. If it's not set, it's assumed that it's the element itself from which you're calling this function.\n  567  * **customOperation(operation, path, [params, headers, elem])**: This does a custom operation to the path that we specify. This method is actually used from all the others in this subsection. Operation can be one of: get, post, put, delete, head, options, patch, trace\n  568: * **addRestangularMethod(name, operation, [path, params, headers, elem])**: This will add a new restangular method to this object with the name `name` to the operation and path specified (or current path otherwise). There's a section on how to do this later. \n  569  \n  570   \n  ...\n  573  ````javascript\n  574  // GET /accounts/123/messages\n  575: Restangular.one(\"accounts\", 123).customGET(\"messages\")\n  576  \n  577  // GET /accounts/messages?param=param2\n  578: Restangular.all(\"accounts\").customGET(\"messages\", {param: \"param2\"})\n  579  ````\n  580  ## Copying elements\n  581: Before modifying an object, we sometimes want to copy it and then modify the copied object. We can't use `angular.copy` for this because it'll not change the `this` binded in the functions we add to the object. In this cases, you must use `Restangular.copy(fromElement)`.\n  582  \n  583  ## Enhanced promises\n  584  \n  585: Restangular uses enhanced promises when returning. What does this mean? All promises returned now have 2 additional methods and collection promises have 3. This are the methods:\n  586  \n  587  * **call(methodName, params*)**: This will return a new promise of the previous value, after calling the method called methodName with the parameters params.\n  ...\n  592  \n  593  ````javascript\n  594: var buildings = Restangular.all(\"buildings\").getList();\n  595  \n  596  // New promise after adding the new building\n  ...\n  611  ## Using Self reference resources\n  612  \n  613: A lot of REST APIs return the URL to self of the element that you're querying. You can use that with Restangular so that you don't have to create the URLs yourself, but use the ones provided by the server.\n  614  \n  615  Let's say that when doing a GET to `/people` you get the following\n  ...\n  631  ````\n  632  \n  633: In this case, as you can see, the URL to each element can't be guessed so we need to use that to reference the element. Restangular supports both relative and absolute URLs :).\n  634  \n  635: How do we do this with Restangular?\n  636  \n  637  First, we need to configure the path for the link to self. For that, int he config we do:\n  638  \n  639  ````javascript\n  640: RestangularProvider.setRestangularFields({\n  641    selfLink: 'self.link'\n  642  });\n  ...\n  647  ````javascript\n  648  // Instead of using all we could also use allUrl to set a URL\n  649: // Restangular.allUrl('people', 'http://www.example.com/people')\n  650  \n  651: Restangular.all('people').getList().then(function(people) {\n  652  \n  653    var gonto = people[0];\n  ...\n  662  \n  663  ## URL Building\n  664: Sometimes, we have a lot of nested entities (and their IDs), but we just want the last child. In those cases, doing a request for everything to get the last child is overkill. For those cases, I've added the possibility to create URLs using the same API as creating a new Restangular object. This connections are created without making any requests. Let's see how to do this:\n  665  \n  666  ````javascript\n  667  \n  668: var restangularSpaces = Restangular.one(\"accounts\",123).one(\"buildings\", 456).all(\"spaces\");\n  669  \n  670  // This will do ONE get to /accounts/123/buildings/456/spaces\n  671: restangularSpaces.getList()\n  672  \n  673  // This will do ONE get to /accounts/123/buildings/456/spaces/789\n  674: Restangular.one(\"accounts\", 123).one(\"buildings\", 456).one(\"spaces\", 789).get()\n  675  \n  676  // POST /accounts/123/buildings/456/spaces\n  677: Restangular.one(\"accounts\", 123).one(\"buildings\", 456).all(\"spaces\").post({name: \"New Space\"});\n  678  \n  679  // DELETE /accounts/123/buildings/456\n  680: Restangular.one(\"accounts\", 123).one(\"buildings\", 456).remove();\n  681  ````\n  682  \n  683: ## Creating new Restangular Methods\n  684  \n  685: Let's assume that your API needs some custom methods to work. If that's the case, always calling customGET or customPOST for that method with all parameters is a pain in the ass. That's why every element has a `addRestangularMethod` method. \n  686  \n  687  This can be used together with the hook `addElementTransformer` to do some neat stuff. Let's see an example to learn this:\n  ...\n  691  \n  692  // It will transform all building elements, NOT collections\n  693: RestangularProvider.addElementTransformer('buildings', false, function(building) {\n  694          // This will add a method called evaluate that will do a get to path evaluate with NO default\n  695          // query params and with some default header\n  696          // signature is (name, operation, path, params, headers, elementToPost)\n  697          \n  698:         building.addRestangularMethod('evaluate', 'get', 'evaluate', undefined, {'myHeader': 'value'});\n  699          \n  700          return building;\n  701  });\n  702  \n  703: RestangularProvider.addElementTransformer('users', true, function(user) {\n  704          // This will add a method called login that will do a POST to the path login\n  705          // signature is (name, operation, path, params, headers, elementToPost)\n  706          \n  707:         user.addRestangularMethod('login', 'post', 'login');\n  708          \n  709          return user;\n  ...\n  719  // If something is set to any of this variables, the default set in the method creation will be overridden\n  720  // If nothing is set, then the defaults are sent\n  721: Restangular.one('building', 123).evaluate({myParam: 'param'});\n  722  \n  723  // GET to /buildings/123/evaluate?myParam=param with headers myHeader: specialHeaderCase\n  724  \n  725: Restangular.one('building', 123).evaluate({myParam: 'param'}, {'myHeader': 'specialHeaderCase'});\n  726  \n  727  // Here the body of the POST is going to be {key: value} as POST is an unsafe operation\n  728: Restangular.all('users').login({key: value});\n  729  \n  730  ````\n  ...\n  732  ## Adding Custom Methods to Collections\n  733  \n  734: Create custom methods for your collection using Restangular.extendCollection(). This is an alias for:\n  735  \n  736  ```\n  737:   Restangular.addElementTransformer(route, true, fn)\n  738  ```\n  739  \n  ...\n  741  ```\n  742    // create methods for your collection\n  743:   Restangular.extendCollection('accounts', function(collection) {\n  744      collection.totalAmount = function() {\n  745        // implementation here\n  ...\n  749    });\n  750  \n  751:   var accountsPromise = Restangular.all('accounts').getList();\n  752        \n  753    accountsPromise.then(function(accounts) {\n  ...\n  758  ## Adding Custom Methods to Models\n  759  \n  760: Create custom methods for your models using Restangular.extendModel(). This is an alias for:\n  761  \n  762  ```\n  763:   Restangular.addElementTransformer(route, false, fn)\n  764  ```\n  765  \n  766  ### Example:\n  767  ```\n  768:   Restangular.extendModel('accounts', function(model) {\n  769      model.prettifyAmount = function() {};\n  770      return model;\n  771    });\n  772  \n  773:   var accountPromise = Restangular.one('accounts', 1).get();\n  774    \n  775    accountPromise.then(function(account) {\n  ...\n  785  \n  786  ````javascript\n  787: Restangular.all(\"accounts\").getList().then(function() {\n  788    console.log(\"All ok\");\n  789  }, function(response) {\n  ...\n  792  ````\n  793  \n  794: #### **I need to send one header in EVERY Restangular request, how do I do this?**\n  795  \n  796  You can use `defaultHeaders` property for this or `$httpProvider.defaults.headers`, whichever suits you better. `defaultsHeaders` can be scoped with `withConfig` so it's really cool.\n  ...\n  798  #### Can I cache requests?\n  799  \n  800: `$http` can cache requests if you send the property `cache` to true. You can do that for every Restangular request by using `defaultHttpFields` property. This is the way:\n  801  \n  802  ````javascript\n  803: RestangularProvider.setDefaultHttpFields({cache: true});\n  804  ````\n  805  \n  806  #### Can it be used in `$routeProvider.resolve`?\n  807  \n  808: Yes, of course. Every method in Restangular returns a promise so this can be used without any problem.\n  809  \n  810  #### **My response is actually wrapped with some metadata. How do I get the data in that case?**\n  ...\n  837  ````\n  838  \n  839: In this case, you'd need to configure Restangular's `responseExtractor` and `listTypeIsArray`. See the following:\n  840  \n  841  ````javascript\n  842: app.config(function(RestangularProvider) {\n  843      \n  844      // Now let's configure the response extractor for each request\n  845:     RestangularProvider.setResponseExtractor(function(response, operation, what, url) {\n  846        // This is a get for a list\n  847        var newResponse;\n  ...\n  861  #### **I use Mongo and the ID of the elements is `_id` not `id` as the default. Therefore requests are sent to undefined routes**\n  862  \n  863: What you need to do is to configure the `RestangularFields` and set the `id` field to `_id`. Let's see how:\n  864  \n  865  ````javascript\n  866: RestangularProvider.setRestangularFields({\n  867    id: \"_id\"\n  868  });\n  ...\n  870  \n  871  \n  872: #### **How do I handle CRUD operations in a List returned by Restangular?**\n  873  \n  874  The best option for doing CRUD operations with a list, is to actually use the \"real\" list, and not the promise. It makes it easy to interact with it.\n  ...\n  878  ````javascript\n  879  // Here we use then to resolve the promise.\n  880: Restangular.all('users').getList().then(function(users) {\n  881    $scope.users = users;\n  882    var userWithId = _.find(users, function(user) {\n  ...\n  909  It won't be stripped out anymore as I've ditched `$resource` :). Now you can happily put the port :).\n  910  \n  911: #### How can I access the `unrestangularized` element as well as the `restangularized` one?\n  912  \n  913: In order to get this done, you need to use the `responseExtractor`. You need to set a property there that will point to the original response received. Also, you need to actually copy this response as that response is the one that's going to be `restangularized` later\n  914  \n  915  ````javascript\n  916: RestangularProvider.setResponseExtractor(function(response) {\n  917    var newResponse = response;\n  918    if (angular.isArray(response)) {\n  ...\n  932  This is a very good question. I could've done the code so that I don't depend on Underscore nor Lodash, but I think both libraries make your life SO much easier. They have all of the \"functional\" stuff like map, reduce, filter, find, etc. \n  933  With these libraries, you always work with immutable stuff, you get compatibility for browsers which don't implement ECMA5 nor some of these cool methods, and they're actually quicker.\n  934: So, why not use it? If you've never heard of them, by using Restangular, you could start using them. Trust me, you're never going to give them up after this!\n  935  \n  936  \n  937  # Supported Angular versions\n  938  \n  939: Restangular supports both 1.0.X and 1.1.X up to versions 1.0.7 and 1.1.5.\n  940  \n  941: Also, when using Restangular with version >= 1.1.4, in case you're using Restangular inside a callback not handled by Angular, you have to wrap the whole request with `$scope.apply` to make it work or you need to run one extra `$digest` manually. Check out https://github.com/mgonto/restangular/issues/71\n  942  \n  943  \n  944  # Server Frameworks\n  945  \n  946: This server frameworks play real nice with Restangular, as they let you create a Nested Restful Resources API easily:\n  947  \n  948  * Ruby on Rails\n  ...\n  955  # Releases Notes\n  956  \n  957: [Click here to see Releases Notes](https://github.com/mgonto/restangular/blob/master/CHANGELOG.md)\n  958  \n  959  # License\n\n/Users/jiar/git/tps/yo/app/bower_components/restangular/dist/restangular.js:\n    2   * Restful Resources service for AngularJS apps\n    3   * @version v1.1.3 - 2013-08-16\n    4:  * @link https://github.com/mgonto/restangular\n    5   * @author Martin Gontovnikas <martin@gonto.com.ar>\n    6   * @license MIT License, http://www.opensource.org/licenses/MIT\n    .\n    8  (function() {\n    9  \n   10: var module = angular.module('restangular', []);\n   11  \n   12: module.provider('Restangular', function() {\n   13          // Configuration\n   14          var Configurer = {};\n   ..\n   27              }\n   28              /**\n   29:              * This is the BaseURL to be used with Restangular\n   30               */\n   31              config.baseUrl = _.isUndefined(config.baseUrl) ? \"\" : config.baseUrl;\n   ..\n  110              \n  111              /**\n  112:              * You can set the restangular fields here. The 3 required fields for Restangular are:\n  113               * \n  114               * id: Id of the element\n  ...\n  116               * parentResource: the reference to the parent resource\n  117               * \n  118:              *  All of this fields except for id, are handled (and created) by Restangular. By default, \n  119               *  the field values will be id, route and parentResource respectively\n  120               */\n  121:             config.restangularFields = config.restangularFields || {\n  122                  id: \"id\",\n  123                  route: \"route\",\n  124                  parentResource: \"parentResource\",\n  125:                 restangularCollection: \"restangularCollection\",\n  126                  cannonicalId: \"__cannonicalId\",\n  127:                 etag: \"restangularEtag\",\n  128                  selfLink: \"href\"\n  129              };\n  130:             object.setRestangularFields = function(resFields) {\n  131:                 config.restangularFields = \n  132:                   _.extend(config.restangularFields, resFields);\n  133              };\n  134  \n  ...\n  153  \n  154              config.setIdToElem = function(elem, id) {\n  155:               config.setFieldToElem(config.restangularFields.id, elem, id);\n  156              };\n  157  \n  158              config.getIdFromElem = function(elem) {\n  159:               return config.getFieldFromElem(config.restangularFields.id, elem);\n  160              };\n  161              \n  ...\n  165  \n  166              config.setUrlToElem = function(elem, url) {\n  167:               config.setFieldToElem(config.restangularFields.selfLink, elem, url);\n  168              }\n  169  \n  170              config.getUrlFromElem = function(elem) {\n  171:               return config.getFieldFromElem(config.restangularFields.selfLink, elem);\n  172              }\n  173              \n  ...\n  178  \n  179              config.getCannonicalIdFromElem = function(elem) {\n  180:               var cannonicalId = elem[config.restangularFields.cannonicalId];\n  181                var actualId = config.isValidId(cannonicalId) ? \n  182                    cannonicalId : config.getIdFromElem(elem);\n  ...\n  240              };\n  241  \n  242:             config.onBeforeElemRestangularized = config.onBeforeElemRestangularized || function(elem) {\n  243                return elem;\n  244              }\n  245:             object.setOnBeforeElemRestangularized = function(post) {\n  246:               config.onBeforeElemRestangularized = post;\n  247              };\n  248              \n  249              /**\n  250:              * This method is called after an element has been \"Restangularized\".\n  251               * \n  252               * It receives the element, a boolean indicating if it's an element or a collection \n  ...\n  254               * \n  255               */\n  256:             config.onElemRestangularized = config.onElemRestangularized || function(elem) {\n  257                return elem;\n  258              };\n  259:             object.setOnElemRestangularized = function(post) {\n  260:               config.onElemRestangularized = post;\n  261              };\n  262  \n  ...\n  332              };\n  333  \n  334:             config.transformElem = function(elem, isCollection, route, Restangular) {\n  335                  var typeTransformers = config.transformers[route];\n  336                  var changedElem = elem;\n  ...\n  340                      });\n  341                  }\n  342:                 return config.onElemRestangularized(changedElem, \n  343:                   isCollection, route, Restangular);\n  344              };\n  345              \n  ...\n  369                  while(current) {\n  370                      parents.push(current);\n  371:                     current = current[this.config.restangularFields.parentResource];\n  372                  }\n  373                  return parents.reverse();\n  374              };\n  375  \n  376:             function RestangularResource(config, $http, url, configurer) {\n  377                var resource = {};\n  378                _.each(_.keys(configurer), function(key) {\n  ...\n  423                  url += (this.config.suffix || '');\n  424  \n  425:                 return RestangularResource(this.config, $http, url, {\n  426                      getList: this.config.withHttpDefaults({method: 'GET',\n  427                        params: params,\n  ...\n  484                        }\n  485                      } else {\n  486:                       elemUrl = elem[__this.config.restangularFields.route];\n  487                        \n  488:                       if (!elem[__this.config.restangularFields.restangularCollection]) {\n  489                            var elemId;\n  490                            if (__this.config.useCannonicalId) {\n  ...\n  536                urlHandler.setConfig(config);\n  537  \n  538:               function restangularizeBase(parent, elem, route) {\n  539:                   elem[config.restangularFields.route] = route;\n  540:                   elem.getRestangularUrl = _.bind(urlHandler.fetchUrl, urlHandler, elem);\n  541:                   elem.addRestangularMethod = _.bind(addRestangularMethodFunction, elem);\n  542                    \n  543                    // RequestLess connection\n  ...\n  551                        var parentUrl = config.getUrlFromElem(parent);\n  552                        \n  553:                       var restangularFieldsForParent = _.union(\n  554:                         _.values( _.pick(config.restangularFields, ['route', 'parentResource']) ),\n  555                          config.extraFields\n  556                        );\n  557:                       var parentResource = _.pick(parent, restangularFieldsForParent);\n  558                        \n  559                        if (config.isValidId(parentId)) {\n  ...\n  564                        }\n  565                        \n  566:                       elem[config.restangularFields.parentResource] = parentResource;\n  567                    } else {\n  568:                     elem[config.restangularFields.parentResource] = null;\n  569                    }\n  570                    return elem;\n  ...\n  576                    var elem = {};\n  577                    config.setIdToElem(elem, id);\n  578:                   return restangularizeElem(parent, elem , route);\n  579                }\n  580  \n  581  \n  582                function all(parent, route) {\n  583:                   return restangularizeCollection(parent, {} , route, true);\n  584                }\n  585  \n  ...\n  587                    var elem = {};\n  588                    config.setUrlToElem(elem, url);\n  589:                   return restangularizeElem(parent, elem , route);\n  590                }\n  591  \n  ...\n  594                    var elem = {};\n  595                    config.setUrlToElem(elem, url);\n  596:                   return restangularizeCollection(parent, elem , route, true);\n  597                }\n  598                // Promises\n  599:               function restangularizePromise(promise, isCollection) {\n  600                    promise.call = _.bind(promiseCall, promise);\n  601                    promise.get = _.bind(promiseGet, promise);\n  602:                   promise[config.restangularFields.restangularCollection] = isCollection;\n  603                    if (isCollection) {\n  604                        promise.push = _.bind(promiseCall, promise, \"push\");\n  ...\n  616                        deferred.resolve(val);\n  617                    });\n  618:                   return restangularizePromise(deferred.promise, this[config.restangularFields.restangularCollection]);\n  619                }\n  620                \n  ...\n  624                        deferred.resolve(val[what]);\n  625                    });\n  626:                   return restangularizePromise(deferred.promise, this[config.restangularFields.restangularCollection]);\n  627                }\n  628  \n  ...\n  642                // Elements\n  643  \n  644:               function stripRestangular(elem) {\n  645:                 return _.omit(elem, _.values(_.omit(config.restangularFields, 'id')));\n  646                }\n  647  \n  ...\n  668                }\n  669                \n  670:               function copyRestangularizedElement(fromElement) {\n  671                    var copiedElement = angular.copy(fromElement);\n  672:                   return restangularizeElem(copiedElement[config.restangularFields.parentResource], \n  673:                           copiedElement, copiedElement[config.restangularFields.route]);\n  674                }\n  675                \n  676:               function restangularizeElem(parent, element, route) {\n  677:                   var elem = config.onBeforeElemRestangularized(element, false, route);\n  678  \n  679:                   var localElem = restangularizeBase(parent, elem, route);\n  680                    \n  681                    if (config.useCannonicalId) {\n  682:                       localElem[config.restangularFields.cannonicalId] = config.getIdFromElem(localElem)\n  683                    }\n  684                    \n  685:                   localElem[config.restangularFields.restangularCollection] = false;\n  686                    localElem.get = _.bind(getFunction, localElem);\n  687                    localElem.getList = _.bind(fetchFunction, localElem);\n  ...\n  698                }\n  699                \n  700:               function restangularizeCollection(parent, element, route) {\n  701:                   var elem = config.onBeforeElemRestangularized(element, true, route);\n  702  \n  703:                   var localElem = restangularizeBase(parent, elem, route);\n  704:                   localElem[config.restangularFields.restangularCollection] = true;\n  705                    localElem.post = _.bind(postFunction, localElem, null);\n  706                    localElem.head = _.bind(headFunction, localElem);\n  ...\n  720                    var deferred = $q.defer();\n  721                    elemToPut.put(params, headers).then(function(serverElem) {\n  722:                       var newArray = copyRestangularizedElement(__this);\n  723                        newArray[idx] = serverElem;\n  724                        deferred.resolve(newArray);\n  ...\n  727                    });\n  728                    \n  729:                   return restangularizePromise(deferred.promise, true)\n  730                }\n  731                \n  ...\n  734                    var etag = response.headers(\"ETag\");\n  735                    if (data && etag) {\n  736:                       data[config.restangularFields.etag] = etag;\n  737                    }\n  738                    return data;\n  ...\n  745                    var operation = 'getList';\n  746                    var url = urlHandler.fetchUrl(this, what);\n  747:                   var whatFetched = what || __this[config.restangularFields.route];\n  748                    \n  749  \n  ...\n  752  \n  753                    urlHandler.resource(this, $http, request.headers, request.params, what, \n  754:                           this[config.restangularFields.etag]).getList().then(function(response) {\n  755                        var resData = response.data;\n  756                        var data = parseResponse(resData, operation, whatFetched, url, response, deferred);\n  757                        var processedData = _.map(data, function(elem) {\n  758:                           if (!__this[config.restangularFields.restangularCollection]) {\n  759:                               return restangularizeElem(__this, elem, what);\n  760                            } else {\n  761:                               return restangularizeElem(__this[config.restangularFields.parentResource],\n  762:                                 elem, __this[config.restangularFields.route]);\n  763                            }\n  764                            \n  ...\n  766  \n  767                        processedData = _.extend(data, processedData);\n  768:                       if (!__this[config.restangularFields.restangularCollection]) {\n  769:                           resolvePromise(deferred, response, restangularizeCollection(__this, processedData, what));\n  770                        } else {\n  771:                           resolvePromise(deferred, response, restangularizeCollection(null, processedData, __this[config.restangularFields.route]));\n  772                        }\n  773                    }, function error(response) {\n  ...\n  777                    });\n  778                    \n  779:                   return restangularizePromise(deferred.promise, true);\n  780                }\n  781                \n  782                function elemFunction(operation, what, params, obj, headers) {\n  783                    var __this = this;\n  784:                   var etag = this[config.restangularFields.etag];\n  785                    var deferred = $q.defer();\n  786                    var resParams = params || {};\n  787:                   var route = what || this[config.restangularFields.route];\n  788                    var fetchUrl = urlHandler.fetchUrl(this, what);\n  789                    \n  790:                   var callObj = obj || (operation === 'remove' ? undefined : stripRestangular(this));\n  791                    var request = config.fullRequestInterceptor(callObj, operation, route, fetchUrl, \n  792                      headers || {}, resParams || {});\n  ...\n  797                        if (elem) {\n  798  \n  799:                         if (operation === \"post\" && !__this[config.restangularFields.restangularCollection]) {\n  800:                           resolvePromise(deferred, response, restangularizeElem(__this, elem, what));\n  801                          } else {\n  802:                           resolvePromise(deferred, response, restangularizeElem(__this[config.restangularFields.parentResource], elem, __this[config.restangularFields.route]));\n  803                          }  \n  804                          \n  ...\n  835                    }\n  836                    \n  837:                   return restangularizePromise(deferred.promise);\n  838                }\n  839                \n  ...\n  874               }\n  875               \n  876:              function addRestangularMethodFunction(name, operation, path, defaultParams, defaultHeaders, defaultElem) {\n  877                   var bindedFunction;\n  878                   if (operation === 'getList') {\n  ...\n  915                Configurer.init(service, config);\n  916                \n  917:               service.copy = _.bind(copyRestangularizedElement, service);\n  918  \n  919                service.withConfig = _.bind(withConfigurationFunction, service);\n  ...\n  927                service.allUrl = _.bind(allUrl, service, null);\n  928  \n  929:               service.restangularizeElement = _.bind(restangularizeElem, service);\n  930  \n  931:               service.restangularizeCollection = _.bind(restangularizeCollection, service);\n  932                \n  933                return service;\n\n/Users/jiar/git/tps/yo/app/bower_components/restangular/dist/restangular.min.js:\n    2   * Restful Resources service for AngularJS apps\n    3   * @version v1.1.3 - 2013-08-16\n    4:  * @link https://github.com/mgonto/restangular\n    5   * @author Martin Gontovnikas <martin@gonto.com.ar>\n    6   * @license MIT License, http://www.opensource.org/licenses/MIT\n    7   */\n    8: !function(){var a=angular.module(\"restangular\",[]);a.provider(\"Restangular\",function(){var a={};a.init=function(a,b){function c(a,b,c,d){var e={};return _.each(_.keys(d),function(f){var g=d[f];g.params=_.extend({},g.params,a.defaultRequestParams[g.method.toLowerCase()]),_.isEmpty(g.params)&&delete g.params,e[f]=a.isSafe(g.method)?function(){return b(_.extend(g,{url:c}))}:function(a){return b(_.extend(g,{url:c,data:a}))}}),e}var d=[\"get\",\"head\",\"options\",\"trace\"];b.isSafe=function(a){return _.contains(d,a.toLowerCase())};var e=/^https?:\\/\\//i;b.isAbsoluteUrl=function(a){return a&&e.test(a)},b.baseUrl=_.isUndefined(b.baseUrl)?\"\":b.baseUrl,a.setBaseUrl=function(a){b.baseUrl=\"/\"===_.last(a)?_.initial(a).join(\"\"):a},b.extraFields=b.extraFields||[],a.setExtraFields=function(a){b.extraFields=a},b.defaultHttpFields=b.defaultHttpFields||{},a.setDefaultHttpFields=function(a){b.defaultHttpFields=a},b.withHttpDefaults=function(a){return _.defaults(a,b.defaultHttpFields)},b.defaultRequestParams=b.defaultRequestParams||{get:{},post:{},put:{},remove:{},common:{}},a.setDefaultRequestParams=function(a){b.defaultRequestParams.common=a},a.requestParams=b.defaultRequestParams,b.defaultHeaders=b.defaultHeaders||{},a.setDefaultHeaders=function(c){b.defaultHeaders=c,a.defaultHeaders=b.defaultHeaders},a.defaultHeaders=b.defaultHeaders,b.methodOverriders=b.methodOverriders||[],a.setMethodOverriders=function(a){var c=_.extend([],a);b.isOverridenMethod(\"delete\",c)&&c.push(\"remove\"),b.methodOverriders=c},b.isOverridenMethod=function(a,c){var d=c||b.methodOverriders;return!_.isUndefined(_.find(d,function(b){return b.toLowerCase()===a.toLowerCase()}))},b.urlCreator=b.urlCreator||\"path\",a.setUrlCreator=function(a){if(!_.has(b.urlCreatorFactory,a))throw new Error(\"URL Path selected isn't valid\");b.urlCreator=a},b.restangularFields=b.restangularFields||{id:\"id\",route:\"route\",parentResource:\"parentResource\",restangularCollection:\"restangularCollection\",cannonicalId:\"__cannonicalId\",etag:\"restangularEtag\",selfLink:\"href\"},a.setRestangularFields=function(a){b.restangularFields=_.extend(b.restangularFields,a)},b.setFieldToElem=function(a,b,c){var d=a.split(\".\"),e=b;_.each(_.initial(d),function(a){e[a]={},e=e[a]}),e[_.last(d)]=c},b.getFieldFromElem=function(a,b){var c=a.split(\".\"),d=angular.copy(b);return _.each(c,function(a){d=d[a]}),d},b.setIdToElem=function(a,c){b.setFieldToElem(b.restangularFields.id,a,c)},b.getIdFromElem=function(a){return b.getFieldFromElem(b.restangularFields.id,a)},b.isValidId=function(a){return\"\"!==a&&!_.isUndefined(a)&&!_.isNull(a)},b.setUrlToElem=function(a,c){b.setFieldToElem(b.restangularFields.selfLink,a,c)},b.getUrlFromElem=function(a){return b.getFieldFromElem(b.restangularFields.selfLink,a)},b.useCannonicalId=_.isUndefined(b.useCannonicalId)?!1:b.useCannonicalId,a.setUseCannonicalId=function(a){b.useCannonicalId=a},b.getCannonicalIdFromElem=function(a){var c=a[b.restangularFields.cannonicalId],d=b.isValidId(c)?c:b.getIdFromElem(a);return d},b.responseExtractor=b.responseExtractor||function(a){return a},a.setResponseExtractor=function(a){b.responseExtractor=a},a.setResponseInterceptor=a.setResponseExtractor,b.fullRequestInterceptor=b.fullRequestInterceptor||function(a,b,c,d,e,f){return{element:a,headers:e,params:f}},a.setRequestInterceptor=function(a){b.fullRequestInterceptor=function(b,c,d,e,f,g){return{headers:f,params:g,element:a(b,c,d,e)}}},a.setFullRequestInterceptor=function(a){b.fullRequestInterceptor=a},b.errorInterceptor=b.errorInterceptor||function(){},a.setErrorInterceptor=function(a){b.errorInterceptor=a},b.onBeforeElemRestangularized=b.onBeforeElemRestangularized||function(a){return a},a.setOnBeforeElemRestangularized=function(a){b.onBeforeElemRestangularized=a},b.onElemRestangularized=b.onElemRestangularized||function(a){return a},a.setOnElemRestangularized=function(a){b.onElemRestangularized=a},a.setListTypeIsArray=function(){},b.shouldSaveParent=b.shouldSaveParent||function(){return!0},a.setParentless=function(a){_.isArray(a)?b.shouldSaveParent=function(b){return!_.contains(a,b)}:_.isBoolean(a)&&(b.shouldSaveParent=function(){return!a})},b.suffix=_.isUndefined(b.suffix)?null:b.suffix,a.setRequestSuffix=function(a){b.suffix=a},b.transformers=b.transformers||{},a.addElementTransformer=function(a,c,d){var e=null,f=null;2===arguments.length?f=c:(f=d,e=c);var g=b.transformers[a];g||(g=b.transformers[a]=[]),g.push(function(a,b){return _.isNull(e)||a==e?f(b):b})},a.extendCollection=function(b,c){return a.addElementTransformer(b,!0,c)},a.extendModel=function(b,c){return a.addElementTransformer(b,!1,c)},b.transformElem=function(a,c,d,e){var f=b.transformers[d],g=a;return f&&_.each(f,function(a){g=a(c,g)}),b.onElemRestangularized(g,c,d,e)},b.fullResponse=_.isUndefined(b.fullResponse)?!1:b.fullResponse,a.setFullResponse=function(a){b.fullResponse=a},b.urlCreatorFactory={};var f=function(){};f.prototype.setConfig=function(a){this.config=a},f.prototype.parentsArray=function(a){for(var b=[];a;)b.push(a),a=a[this.config.restangularFields.parentResource];return b.reverse()},f.prototype.resource=function(a,b,d,e,f,g){var h=_.defaults(e||{},this.config.defaultRequestParams.common),i=_.defaults(d||{},this.config.defaultHeaders);g&&(i[\"If-None-Match\"]=g);var j=this.base(a);return j+=f?\"/\"+f:\"\",j+=this.config.suffix||\"\",c(this.config,b,j,{getList:this.config.withHttpDefaults({method:\"GET\",params:h,headers:i}),get:this.config.withHttpDefaults({method:\"GET\",params:h,headers:i}),put:this.config.withHttpDefaults({method:\"PUT\",params:h,headers:i}),post:this.config.withHttpDefaults({method:\"POST\",params:h,headers:i}),remove:this.config.withHttpDefaults({method:\"DELETE\",params:h,headers:i}),head:this.config.withHttpDefaults({method:\"HEAD\",params:h,headers:i}),trace:this.config.withHttpDefaults({method:\"TRACE\",params:h,headers:i}),options:this.config.withHttpDefaults({method:\"OPTIONS\",params:h,headers:i}),patch:this.config.withHttpDefaults({method:\"PATCH\",params:h,headers:i})})};var g=function(){};g.prototype=new f,g.prototype.base=function(a){var c=this;return _.reduce(this.parentsArray(a),function(a,d){var e,f=c.config.getUrlFromElem(d);if(f){if(c.config.isAbsoluteUrl(f))return f;e=f}else if(e=d[c.config.restangularFields.route],!d[c.config.restangularFields.restangularCollection]){var g;g=c.config.useCannonicalId?c.config.getCannonicalIdFromElem(d):c.config.getIdFromElem(d),b.isValidId(g)&&(e+=\"/\"+g)}return a+\"/\"+e},this.config.baseUrl)},g.prototype.fetchUrl=function(a,b){var c=this.base(a);return b&&(c+=\"/\"+b),c},b.urlCreatorFactory.path=g};var b={};a.init(this,b),this.$get=[\"$http\",\"$q\",function(c,d){function e(f){function g(a,b,c){if(b[f.restangularFields.route]=c,b.getRestangularUrl=_.bind(K.fetchUrl,K,b),b.addRestangularMethod=_.bind(H,b),b.one=_.bind(h,b,b),b.all=_.bind(i,b,b),b.oneUrl=_.bind(j,b,b),b.allUrl=_.bind(k,b,b),a&&f.shouldSaveParent(c)){var d=f.getIdFromElem(a),e=f.getUrlFromElem(a),g=_.union(_.values(_.pick(f.restangularFields,[\"route\",\"parentResource\"])),f.extraFields),l=_.pick(a,g);f.isValidId(d)&&f.setIdToElem(l,d),f.isValidId(e)&&f.setUrlToElem(l,e),b[f.restangularFields.parentResource]=l}else b[f.restangularFields.parentResource]=null;return b}function h(a,b,c){var d={};return f.setIdToElem(d,c),s(a,d,b)}function i(a,b){return t(a,{},b,!0)}function j(a,b,c){var d={};return f.setUrlToElem(d,c),s(a,d,b)}function k(a,b,c){var d={};return f.setUrlToElem(d,c),t(a,d,b,!0)}function l(a,b){return a.call=_.bind(m,a),a.get=_.bind(n,a),a[f.restangularFields.restangularCollection]=b,b&&(a.push=_.bind(m,a,\"push\")),a}function m(a){var b=d.defer(),c=arguments;return this.then(function(d){var e=Array.prototype.slice.call(c,1),f=d[a];f.apply(d,e),b.resolve(d)}),l(b.promise,this[f.restangularFields.restangularCollection])}function n(a){var b=d.defer();return this.then(function(c){b.resolve(c[a])}),l(b.promise,this[f.restangularFields.restangularCollection])}function o(a,b,c){return f.fullResponse?a.resolve(_.extend(b,{data:c})):(a.resolve(c),void 0)}function p(a){return _.omit(a,_.values(_.omit(f.restangularFields,\"id\")))}function q(a){a.customOperation=_.bind(G,a),_.each([\"put\",\"post\",\"get\",\"delete\"],function(b){_.each([\"do\",\"custom\"],function(c){var d,e=\"delete\"===b?\"remove\":b,f=c+b.toUpperCase();d=\"put\"!==e&&\"post\"!==e?G:function(a,b,c,d,e){return _.bind(G,this)(a,c,d,e,b)},a[f]=_.bind(d,a,e)})}),a.customGETLIST=_.bind(w,a),a.doGETLIST=a.customGETLIST}function r(a){var b=angular.copy(a);return s(b[f.restangularFields.parentResource],b,b[f.restangularFields.route])}function s(a,b,c){var d=f.onBeforeElemRestangularized(b,!1,c),e=g(a,d,c);return f.useCannonicalId&&(e[f.restangularFields.cannonicalId]=f.getIdFromElem(e)),e[f.restangularFields.restangularCollection]=!1,e.get=_.bind(y,e),e.getList=_.bind(w,e),e.put=_.bind(A,e),e.post=_.bind(B,e),e.remove=_.bind(z,e),e.head=_.bind(C,e),e.trace=_.bind(D,e),e.options=_.bind(E,e),e.patch=_.bind(F,e),q(e),f.transformElem(e,!1,c,J)}function t(a,b,c){var d=f.onBeforeElemRestangularized(b,!0,c),e=g(a,d,c);return e[f.restangularFields.restangularCollection]=!0,e.post=_.bind(B,e,null),e.head=_.bind(C,e),e.trace=_.bind(D,e),e.putElement=_.bind(u,e),e.options=_.bind(E,e),e.patch=_.bind(F,e),e.getList=_.bind(w,e,null),q(e),f.transformElem(e,!0,c,J)}function u(a,b,c){var e=this,f=this[a],g=d.defer();return f.put(b,c).then(function(b){var c=r(e);c[a]=b,g.resolve(c)},function(a){g.reject(a)}),l(g.promise,!0)}function v(a,b,c,d,e,g){var h=f.responseExtractor(a,b,c,d,e,g),i=e.headers(\"ETag\");return h&&i&&(h[f.restangularFields.etag]=i),h}function w(a,b,e){var g=this,h=d.defer(),i=\"getList\",j=K.fetchUrl(this,a),k=a||g[f.restangularFields.route],m=f.fullRequestInterceptor(null,i,k,j,e||{},b||{});return K.resource(this,c,m.headers,m.params,a,this[f.restangularFields.etag]).getList().then(function(b){var c=b.data,d=v(c,i,k,j,b,h),e=_.map(d,function(b){return g[f.restangularFields.restangularCollection]?s(g[f.restangularFields.parentResource],b,g[f.restangularFields.route]):s(g,b,a)});e=_.extend(d,e),g[f.restangularFields.restangularCollection]?o(h,b,t(null,e,g[f.restangularFields.route])):o(h,b,t(g,e,a))},function(a){f.errorInterceptor(a)!==!1&&h.reject(a)}),l(h.promise,!0)}function x(a,b,e,g,h){var i=this,j=this[f.restangularFields.etag],k=d.defer(),m=e||{},n=b||this[f.restangularFields.route],q=K.fetchUrl(this,b),r=g||(\"remove\"===a?void 0:p(this)),t=f.fullRequestInterceptor(r,a,n,q,h||{},m||{}),u=function(c){var d=c.data,e=v(d,a,n,q,c,k);e?\"post\"!==a||i[f.restangularFields.restangularCollection]?o(k,c,s(i[f.restangularFields.parentResource],e,i[f.restangularFields.route])):o(k,c,s(i,e,b)):o(k,c,void 0)},w=function(a){f.errorInterceptor(a)!==!1&&k.reject(a)},x=a,y=_.extend({},t.headers),z=f.isOverridenMethod(a);return z&&(x=\"post\",y=_.extend(y,{\"X-HTTP-Method-Override\":\"remove\"===a?\"DELETE\":a})),f.isSafe(a)?z?K.resource(this,c,y,t.params,b,j)[x]({}).then(u,w):K.resource(this,c,y,t.params,b,j)[x]().then(u,w):K.resource(this,c,y,t.params,b,j)[x](t.element).then(u,w),l(k.promise)}function y(a,b){return _.bind(x,this)(\"get\",void 0,a,void 0,b)}function z(a,b){return _.bind(x,this)(\"remove\",void 0,a,void 0,b)}function A(a,b){return _.bind(x,this)(\"put\",void 0,a,void 0,b)}function B(a,b,c,d){return _.bind(x,this)(\"post\",a,c,b,d)}function C(a,b){return _.bind(x,this)(\"head\",void 0,a,void 0,b)}function D(a,b){return _.bind(x,this)(\"trace\",void 0,a,void 0,b)}function E(a,b){return _.bind(x,this)(\"options\",void 0,a,void 0,b)}function F(a,b,c){return _.bind(x,this)(\"patch\",void 0,b,a,c)}function G(a,b,c,d,e){return _.bind(x,this)(a,b,c,e,d)}function H(a,b,c,d,e,g){var h;h=\"getList\"===b?_.bind(w,this,c):_.bind(G,this,b,c);var i=function(a,b,c){var f=_.defaults({params:a,headers:b,elem:c},{params:d,headers:e,elem:g});return h(f.params,f.headers,f.elem)};this[a]=f.isSafe(b)?i:function(a,b,c){return i(b,c,a)}}function I(c){var d=angular.copy(b);return a.init(d,d),c(d),e(d)}var J={},K=new f.urlCreatorFactory[f.urlCreator];return K.setConfig(f),a.init(J,f),J.copy=_.bind(r,J),J.withConfig=_.bind(I,J),J.one=_.bind(h,J,null),J.all=_.bind(i,J,null),J.oneUrl=_.bind(j,J,null),J.allUrl=_.bind(k,J,null),J.restangularizeElement=_.bind(s,J),J.restangularizeCollection=_.bind(t,J),J}return e(b)}]})}();\n\n/Users/jiar/git/tps/yo/app/bower_components/restangular/src/restangular.js:\n    1  (function() {\n    2  \n    3: var module = angular.module('restangular', []);\n    4  \n    5: module.provider('Restangular', function() {\n    6          // Configuration\n    7          var Configurer = {};\n    .\n   20              }\n   21              /**\n   22:              * This is the BaseURL to be used with Restangular\n   23               */\n   24              config.baseUrl = _.isUndefined(config.baseUrl) ? \"\" : config.baseUrl;\n   ..\n  103              \n  104              /**\n  105:              * You can set the restangular fields here. The 3 required fields for Restangular are:\n  106               * \n  107               * id: Id of the element\n  ...\n  109               * parentResource: the reference to the parent resource\n  110               * \n  111:              *  All of this fields except for id, are handled (and created) by Restangular. By default, \n  112               *  the field values will be id, route and parentResource respectively\n  113               */\n  114:             config.restangularFields = config.restangularFields || {\n  115                  id: \"id\",\n  116                  route: \"route\",\n  117                  parentResource: \"parentResource\",\n  118:                 restangularCollection: \"restangularCollection\",\n  119                  cannonicalId: \"__cannonicalId\",\n  120:                 etag: \"restangularEtag\",\n  121                  selfLink: \"href\"\n  122              };\n  123:             object.setRestangularFields = function(resFields) {\n  124:                 config.restangularFields = \n  125:                   _.extend(config.restangularFields, resFields);\n  126              };\n  127  \n  ...\n  146  \n  147              config.setIdToElem = function(elem, id) {\n  148:               config.setFieldToElem(config.restangularFields.id, elem, id);\n  149              };\n  150  \n  151              config.getIdFromElem = function(elem) {\n  152:               return config.getFieldFromElem(config.restangularFields.id, elem);\n  153              };\n  154              \n  ...\n  158  \n  159              config.setUrlToElem = function(elem, url) {\n  160:               config.setFieldToElem(config.restangularFields.selfLink, elem, url);\n  161              }\n  162  \n  163              config.getUrlFromElem = function(elem) {\n  164:               return config.getFieldFromElem(config.restangularFields.selfLink, elem);\n  165              }\n  166              \n  ...\n  171  \n  172              config.getCannonicalIdFromElem = function(elem) {\n  173:               var cannonicalId = elem[config.restangularFields.cannonicalId];\n  174                var actualId = config.isValidId(cannonicalId) ? \n  175                    cannonicalId : config.getIdFromElem(elem);\n  ...\n  233              };\n  234  \n  235:             config.onBeforeElemRestangularized = config.onBeforeElemRestangularized || function(elem) {\n  236                return elem;\n  237              }\n  238:             object.setOnBeforeElemRestangularized = function(post) {\n  239:               config.onBeforeElemRestangularized = post;\n  240              };\n  241              \n  242              /**\n  243:              * This method is called after an element has been \"Restangularized\".\n  244               * \n  245               * It receives the element, a boolean indicating if it's an element or a collection \n  ...\n  247               * \n  248               */\n  249:             config.onElemRestangularized = config.onElemRestangularized || function(elem) {\n  250                return elem;\n  251              };\n  252:             object.setOnElemRestangularized = function(post) {\n  253:               config.onElemRestangularized = post;\n  254              };\n  255  \n  ...\n  325              };\n  326  \n  327:             config.transformElem = function(elem, isCollection, route, Restangular) {\n  328                  var typeTransformers = config.transformers[route];\n  329                  var changedElem = elem;\n  ...\n  333                      });\n  334                  }\n  335:                 return config.onElemRestangularized(changedElem, \n  336:                   isCollection, route, Restangular);\n  337              };\n  338              \n  ...\n  362                  while(current) {\n  363                      parents.push(current);\n  364:                     current = current[this.config.restangularFields.parentResource];\n  365                  }\n  366                  return parents.reverse();\n  367              };\n  368  \n  369:             function RestangularResource(config, $http, url, configurer) {\n  370                var resource = {};\n  371                _.each(_.keys(configurer), function(key) {\n  ...\n  416                  url += (this.config.suffix || '');\n  417  \n  418:                 return RestangularResource(this.config, $http, url, {\n  419                      getList: this.config.withHttpDefaults({method: 'GET',\n  420                        params: params,\n  ...\n  477                        }\n  478                      } else {\n  479:                       elemUrl = elem[__this.config.restangularFields.route];\n  480                        \n  481:                       if (!elem[__this.config.restangularFields.restangularCollection]) {\n  482                            var elemId;\n  483                            if (__this.config.useCannonicalId) {\n  ...\n  529                urlHandler.setConfig(config);\n  530  \n  531:               function restangularizeBase(parent, elem, route) {\n  532:                   elem[config.restangularFields.route] = route;\n  533:                   elem.getRestangularUrl = _.bind(urlHandler.fetchUrl, urlHandler, elem);\n  534:                   elem.addRestangularMethod = _.bind(addRestangularMethodFunction, elem);\n  535                    \n  536                    // RequestLess connection\n  ...\n  544                        var parentUrl = config.getUrlFromElem(parent);\n  545                        \n  546:                       var restangularFieldsForParent = _.union(\n  547:                         _.values( _.pick(config.restangularFields, ['route', 'parentResource']) ),\n  548                          config.extraFields\n  549                        );\n  550:                       var parentResource = _.pick(parent, restangularFieldsForParent);\n  551                        \n  552                        if (config.isValidId(parentId)) {\n  ...\n  557                        }\n  558                        \n  559:                       elem[config.restangularFields.parentResource] = parentResource;\n  560                    } else {\n  561:                     elem[config.restangularFields.parentResource] = null;\n  562                    }\n  563                    return elem;\n  ...\n  569                    var elem = {};\n  570                    config.setIdToElem(elem, id);\n  571:                   return restangularizeElem(parent, elem , route);\n  572                }\n  573  \n  574  \n  575                function all(parent, route) {\n  576:                   return restangularizeCollection(parent, {} , route, true);\n  577                }\n  578  \n  ...\n  580                    var elem = {};\n  581                    config.setUrlToElem(elem, url);\n  582:                   return restangularizeElem(parent, elem , route);\n  583                }\n  584  \n  ...\n  587                    var elem = {};\n  588                    config.setUrlToElem(elem, url);\n  589:                   return restangularizeCollection(parent, elem , route, true);\n  590                }\n  591                // Promises\n  592:               function restangularizePromise(promise, isCollection) {\n  593                    promise.call = _.bind(promiseCall, promise);\n  594                    promise.get = _.bind(promiseGet, promise);\n  595:                   promise[config.restangularFields.restangularCollection] = isCollection;\n  596                    if (isCollection) {\n  597                        promise.push = _.bind(promiseCall, promise, \"push\");\n  ...\n  609                        deferred.resolve(val);\n  610                    });\n  611:                   return restangularizePromise(deferred.promise, this[config.restangularFields.restangularCollection]);\n  612                }\n  613                \n  ...\n  617                        deferred.resolve(val[what]);\n  618                    });\n  619:                   return restangularizePromise(deferred.promise, this[config.restangularFields.restangularCollection]);\n  620                }\n  621  \n  ...\n  635                // Elements\n  636  \n  637:               function stripRestangular(elem) {\n  638:                 return _.omit(elem, _.values(_.omit(config.restangularFields, 'id')));\n  639                }\n  640  \n  ...\n  661                }\n  662                \n  663:               function copyRestangularizedElement(fromElement) {\n  664                    var copiedElement = angular.copy(fromElement);\n  665:                   return restangularizeElem(copiedElement[config.restangularFields.parentResource], \n  666:                           copiedElement, copiedElement[config.restangularFields.route]);\n  667                }\n  668                \n  669:               function restangularizeElem(parent, element, route) {\n  670:                   var elem = config.onBeforeElemRestangularized(element, false, route);\n  671  \n  672:                   var localElem = restangularizeBase(parent, elem, route);\n  673                    \n  674                    if (config.useCannonicalId) {\n  675:                       localElem[config.restangularFields.cannonicalId] = config.getIdFromElem(localElem)\n  676                    }\n  677                    \n  678:                   localElem[config.restangularFields.restangularCollection] = false;\n  679                    localElem.get = _.bind(getFunction, localElem);\n  680                    localElem.getList = _.bind(fetchFunction, localElem);\n  ...\n  691                }\n  692                \n  693:               function restangularizeCollection(parent, element, route) {\n  694:                   var elem = config.onBeforeElemRestangularized(element, true, route);\n  695  \n  696:                   var localElem = restangularizeBase(parent, elem, route);\n  697:                   localElem[config.restangularFields.restangularCollection] = true;\n  698                    localElem.post = _.bind(postFunction, localElem, null);\n  699                    localElem.head = _.bind(headFunction, localElem);\n  ...\n  713                    var deferred = $q.defer();\n  714                    elemToPut.put(params, headers).then(function(serverElem) {\n  715:                       var newArray = copyRestangularizedElement(__this);\n  716                        newArray[idx] = serverElem;\n  717                        deferred.resolve(newArray);\n  ...\n  720                    });\n  721                    \n  722:                   return restangularizePromise(deferred.promise, true)\n  723                }\n  724                \n  ...\n  727                    var etag = response.headers(\"ETag\");\n  728                    if (data && etag) {\n  729:                       data[config.restangularFields.etag] = etag;\n  730                    }\n  731                    return data;\n  ...\n  738                    var operation = 'getList';\n  739                    var url = urlHandler.fetchUrl(this, what);\n  740:                   var whatFetched = what || __this[config.restangularFields.route];\n  741                    \n  742  \n  ...\n  745  \n  746                    urlHandler.resource(this, $http, request.headers, request.params, what, \n  747:                           this[config.restangularFields.etag]).getList().then(function(response) {\n  748                        var resData = response.data;\n  749                        var data = parseResponse(resData, operation, whatFetched, url, response, deferred);\n  750                        var processedData = _.map(data, function(elem) {\n  751:                           if (!__this[config.restangularFields.restangularCollection]) {\n  752:                               return restangularizeElem(__this, elem, what);\n  753                            } else {\n  754:                               return restangularizeElem(__this[config.restangularFields.parentResource],\n  755:                                 elem, __this[config.restangularFields.route]);\n  756                            }\n  757                            \n  ...\n  759  \n  760                        processedData = _.extend(data, processedData);\n  761:                       if (!__this[config.restangularFields.restangularCollection]) {\n  762:                           resolvePromise(deferred, response, restangularizeCollection(__this, processedData, what));\n  763                        } else {\n  764:                           resolvePromise(deferred, response, restangularizeCollection(null, processedData, __this[config.restangularFields.route]));\n  765                        }\n  766                    }, function error(response) {\n  ...\n  770                    });\n  771                    \n  772:                   return restangularizePromise(deferred.promise, true);\n  773                }\n  774                \n  775                function elemFunction(operation, what, params, obj, headers) {\n  776                    var __this = this;\n  777:                   var etag = this[config.restangularFields.etag];\n  778                    var deferred = $q.defer();\n  779                    var resParams = params || {};\n  780:                   var route = what || this[config.restangularFields.route];\n  781                    var fetchUrl = urlHandler.fetchUrl(this, what);\n  782                    \n  783:                   var callObj = obj || (operation === 'remove' ? undefined : stripRestangular(this));\n  784                    var request = config.fullRequestInterceptor(callObj, operation, route, fetchUrl, \n  785                      headers || {}, resParams || {});\n  ...\n  790                        if (elem) {\n  791  \n  792:                         if (operation === \"post\" && !__this[config.restangularFields.restangularCollection]) {\n  793:                           resolvePromise(deferred, response, restangularizeElem(__this, elem, what));\n  794                          } else {\n  795:                           resolvePromise(deferred, response, restangularizeElem(__this[config.restangularFields.parentResource], elem, __this[config.restangularFields.route]));\n  796                          }  \n  797                          \n  ...\n  828                    }\n  829                    \n  830:                   return restangularizePromise(deferred.promise);\n  831                }\n  832                \n  ...\n  867               }\n  868               \n  869:              function addRestangularMethodFunction(name, operation, path, defaultParams, defaultHeaders, defaultElem) {\n  870                   var bindedFunction;\n  871                   if (operation === 'getList') {\n  ...\n  908                Configurer.init(service, config);\n  909                \n  910:               service.copy = _.bind(copyRestangularizedElement, service);\n  911  \n  912                service.withConfig = _.bind(withConfigurationFunction, service);\n  ...\n  920                service.allUrl = _.bind(allUrl, service, null);\n  921  \n  922:               service.restangularizeElement = _.bind(restangularizeElem, service);\n  923  \n  924:               service.restangularizeCollection = _.bind(restangularizeCollection, service);\n  925                \n  926                return service;\n\n/Users/jiar/git/tps/yo/app/bower_components/restangular/test/restangularSpec.js:\n    1: describe(\"Restangular\", function() {\n    2    // API\n    3:   var Restangular, $httpBackend;\n    4:   var accountsModel, restangularAccounts, restangularAccount0, restangularAccount1;\n    5    var messages, newAccount;\n    6  \n    7    // Utils\n    8:   // Apply \"sanitizeRestangularOne\" function to an array of items\n    9:   function sanitizeRestangularAll(items) {\n   10      var all = _.map(items, function(item) {\n   11:       return sanitizeRestangularOne(item);\n   12      });\n   13:     return sanitizeRestangularOne(all);\n   14    };\n   15  \n   16:   // Remove all Restangular/AngularJS added methods in order to use Jasmine toEqual between the retrieve resource and the model\n   17:   function sanitizeRestangularOne(item) {\n   18      return _.omit(item, \"route\", \"parentResource\", \"getList\", \"get\", \"post\", \"put\", \"remove\", \"head\", \"trace\", \"options\", \"patch\",\n   19:       \"$then\", \"$resolved\", \"restangularCollection\", \"customOperation\", \"customGET\", \"customPOST\",\n   20:       \"customPUT\", \"customDELETE\", \"customGETLIST\", \"$getList\", \"$resolved\", \"restangularCollection\", \"one\", \"all\",\"doGET\", \"doPOST\",\n   21:       \"doPUT\", \"doDELETE\", \"doGETLIST\", \"addRestangularMethod\", \"getRestangularUrl\");\n   22    };\n   23  \n   24    // Load required modules\n   25    beforeEach(angular.mock.module(\"ngResource\"));\n   26:   beforeEach(angular.mock.module(\"restangular\"));\n   27  \n   28:   // Init HTTP mock backend and Restangular resources\n   29    beforeEach(inject(function($injector) {\n   30      // Model\n   ..\n   77      });\n   78  \n   79:     Restangular = $injector.get(\"Restangular\");\n   80:     restangularAccounts = Restangular.all(\"accounts\");\n   81:     restangularAccount0 = Restangular.one(\"accounts\", 0);\n   82:     restangularAccount1 = Restangular.one(\"accounts\", 1);\n   83    }));\n   84  \n   ..\n   90    describe(\"ALL\", function() {\n   91      it(\"getList() should return an array of items\", function() {\n   92:       restangularAccounts.getList().then(function(accounts) {\n   93:         expect(sanitizeRestangularAll(accounts)).toEqual(sanitizeRestangularAll(accountsModel));\n   94        });\n   95  \n   ..\n   98  \n   99      it('uses all to get the list without parameters', function() {\n  100:       Restangular.one('accounts', 1).all('messages').getList();\n  101        $httpBackend.expectGET('/accounts/1/messages');\n  102        $httpBackend.flush();\n  ...\n  104  \n  105      it(\"Custom GET methods should work\", function() {\n  106:       restangularAccounts.customGETLIST(\"messages\").then(function(msgs) {\n  107:         expect(sanitizeRestangularAll(msgs)).toEqual(sanitizeRestangularAll(messages));\n  108        });\n  109  \n  ...\n  112  \n  113      it(\"post() should add a new item\", function() {\n  114:      restangularAccounts.post({id: 2, user: \"Someone\"}).then(function() {\n  115         expect(accountsModel.length).toEqual(2);\n  116       });\n  ...\n  121  \n  122      it(\"post() should add a new item with data and return the data from the server\", function() {\n  123:      restangularAccounts.post(newAccount).then(function(added) {\n  124         expect(added.fromServer).toEqual(true);\n  125         expect(added.id).toEqual(newAccount.id);\n  ...\n  131  \n  132      it(\"Doing a post and then other operation (delete) should call right URLs\", function() {\n  133:       restangularAccounts.post(newAccount).then(function(added) {\n  134          added.remove();\n  135          $httpBackend.expectDELETE('/accounts/44').respond(201, '');   \n  ...\n  140  \n  141      it(\"Doing a post to a server that returns no element will return undefined\", function() {\n  142:       restangularAccounts.getList().then(function(accounts) {\n  143          var newTransaction = {id: 1, name: \"Gonto\"};\n  144          accounts[1].post('transactions', newTransaction).then(function(transaction) {\n  ...\n  151  \n  152      it(\"head() should safely return\", function() {\n  153:       restangularAccounts.head().then(function() {\n  154          expect(true).toBe(true);\n  155        });\n  ...\n  158  \n  159      it(\"trace()  should safely return\", function() {\n  160:       restangularAccounts.trace().then(function() {\n  161          expect(true).toBe(true);\n  162        });\n  ...\n  167      it(\"customPUT should work\", function() {\n  168        $httpBackend.expectPUT('/accounts/hey').respond(accountsModel);\n  169:       restangularAccounts.customPUT({key: 'value'}, 'hey');\n  170  \n  171        $httpBackend.flush();\n  ...\n  173  \n  174      it(\"options()  should safely return\", function() {\n  175:       restangularAccounts.options().then(function() {\n  176          expect(true).toBe(true);\n  177        });\n  ...\n  182       it(\"getList() should correctly handle params after customDELETE\", function() {\n  183        $httpBackend.expectGET('/accounts?foo=1').respond(accountsModel);\n  184:       restangularAccounts.getList({foo: 1}).then(function(){\n  185          $httpBackend.expectDELETE('/accounts?id=1').respond(201, '');\n  186:         return restangularAccounts.customDELETE('', {id: 1});\n  187        }).then(function() {\n  188            $httpBackend.expectGET('/accounts?foo=1').respond(accountsModel);\n  189:           return restangularAccounts.getList({foo: 1});\n  190          }).then(function(accounts) {\n  191:           expect(sanitizeRestangularAll(accounts)).toEqual(sanitizeRestangularAll(accountsModel));\n  192          });\n  193  \n  ...\n  198    describe(\"ONE\", function() {\n  199      it(\"get() should return a JSON item\", function() {\n  200:       restangularAccount1.get().then(function(account) {\n  201:         expect(sanitizeRestangularOne(account))\n  202:           .toEqual(sanitizeRestangularOne(accountsModel[1]));\n  203        });\n  204  \n  ...\n  207  \n  208      it(\"Should make RequestLess connections with one\", function() {\n  209:       restangularAccount1.one(\"transactions\", 1).get().then(function(transaction) {\n  210:         expect(sanitizeRestangularOne(transaction))\n  211:           .toEqual(sanitizeRestangularOne(accountsModel[1].transactions[1]));\n  212        });\n  213  \n  ...\n  216  \n  217      it(\"Should make RequestLess connections with all\", function() {\n  218:       restangularAccount1.all(\"transactions\").getList().then(function(transactions) {\n  219:         expect(sanitizeRestangularAll(transactions))\n  220:           .toEqual(sanitizeRestangularAll(accountsModel[1].transactions));\n  221        });\n  222  \n  ...\n  226  \n  227      it(\"Custom GET methods should work\", function() {\n  228:       restangularAccount1.customGET(\"message\").then(function(msg) {\n  229:         expect(sanitizeRestangularOne(msg)).toEqual(sanitizeRestangularOne(messages[0]));\n  230        });\n  231  \n  ...\n  234  \n  235      it(\"put() should update the value\", function() {\n  236:       restangularAccount1.get().then(function(account) {\n  237          account.amount = 1.618;\n  238          account.put().then(function(newAc) {\n  ...\n  250  \n  251      it(\"should return an array when accessing a subvalue\", function() {\n  252:       restangularAccount1.get().then(function(account) {\n  253          account.getList(\"transactions\").then(function(transactions) {\n  254:           expect(sanitizeRestangularAll(transactions))\n  255:             .toEqual(sanitizeRestangularAll(accountsModel[1].transactions));\n  256          });\n  257        });\n  ...\n  263    describe(\"COPY\", function() {\n  264      it(\"should copy an object and 'this' should reference the copied object\", function() {\n  265:       var copiedAccount = Restangular.copy(accountsModel[0]);\n  266        var that;\n  267  \n  ...\n  270  \n  271        // create a spy for one of the methods to capture the value of 'this'\n  272:       spyOn(copiedAccount, 'getRestangularUrl').andCallFake(function() {\n  273          that = this;\n  274        });\n  275  \n  276:       copiedAccount.getRestangularUrl(); // invoke the method we are spying on\n  277        expect(that).toBe(copiedAccount);\n  278      });\n  279    });\n  280  \n  281:   describe(\"getRestangularUrl\", function() {\n  282:     it(\"should return the generated URL when you chain Restangular methods together\", function() {\n  283:       var restangularSpaces = Restangular.one(\"accounts\",123).one(\"buildings\", 456).all(\"spaces\");\n  284:       expect(restangularSpaces.getRestangularUrl()).toEqual(\"/accounts/123/buildings/456/spaces\");\n  285      });\n  286    });\n  287  \n  288:   describe(\"getRestangularUrl with useCannonicalId set to true\", function() {\n  289:     it(\"should return the generated URL when you chain Restangular methods together\", function() {\n  290:       var R = Restangular.withConfig(function(config) {\n  291          config.setUseCannonicalId(true);\n  292        });\n  293:       var restangularSpaces = R.one(\"accounts\",123).one(\"buildings\", 456).all(\"spaces\");\n  294:       expect(restangularSpaces.getRestangularUrl()).toEqual(\"/accounts/123/buildings/456/spaces\");\n  295      });\n  296    });\n  ...\n  301        var accountsPromise;\n  302  \n  303:       Restangular.addElementTransformer('accounts', true, function(collection) {\n  304           collection.totalAmount = function() {};\n  305           return collection;\n  306        });\n  307  \n  308:       accountsPromise = Restangular.all('accounts').getList();\n  309        \n  310        accountsPromise.then(function(accounts) {\n  ...\n  318        var accountPromise;\n  319        \n  320:       Restangular.addElementTransformer('accounts', false, function(model) {\n  321           model.prettifyAmount = function() {};\n  322           return model;\n  323        });\n  324  \n  325:       accountPromise = Restangular.one('accounts', 1).get();\n  326        \n  327        accountPromise.then(function(account) {\n  ...\n  335        var accountPromise;\n  336        \n  337:       Restangular.addElementTransformer('accounts', false, function(model) {\n  338           model.prettifyAmount = function() {};\n  339           return model;\n  340        });\n  341  \n  342:       accountsPromise = Restangular.all('accounts', 1).getList();\n  343        \n  344        accountsPromise.then(function(accounts) {\n  ...\n  354    describe(\"extendCollection\", function() {\n  355      it(\"should be an alias for a specific invocation of addElementTransformer\", function() {\n  356:       var spy = spyOn(Restangular, 'addElementTransformer');\n  357  \n  358        var fn = function(collection) {\n  ...\n  361        };\n  362  \n  363:       Restangular.extendCollection('accounts', fn);\n  364  \n  365        expect(spy).toHaveBeenCalledWith('accounts', true, fn);\n  ...\n  369    describe(\"extendModel\", function() {\n  370      it(\"should be an alias for a specific invocation of addElementTransformer\", function() {\n  371:       var spy = spyOn(Restangular, 'addElementTransformer');\n  372  \n  373        var fn = function(model) {\n  ...\n  376        };\n  377  \n  378:       Restangular.extendModel('accounts', fn);\n  379  \n  380        expect(spy).toHaveBeenCalledWith('accounts', false, fn);\n  ...\n  386        var defaultHeaders = {testheader:'header value'};\n  387        \n  388:       Restangular.setDefaultHeaders(defaultHeaders);\n  389        \n  390:       expect(Restangular.defaultHeaders).toEqual(defaultHeaders);\n  391      });\n  392    });\n\n/Users/jiar/git/tps/yo/app/scripts/app.js:\n    1  'use strict';\n    2  \n    3: angular.module('tpsApp', ['restangular', 'tokenauth'])\n    4    .config(function ($routeProvider) {\n    5      $routeProvider\n    .\n   29      }\n   30    )\n   31:   .config(function (RestangularProvider) {\n   32:     RestangularProvider.setBaseUrl('http://localhost:8080/api/api');\n   33    })\n   34    .config(function (AuthProvider) {\n\n/Users/jiar/git/tps/yo/app/scripts/controllers/dashboard.js:\n    4  \n    5  angular.module('tpsApp')\n    6:   .controller('DashboardCtrl', function ($scope, $rootScope, $resource, $filter, $q, Restangular, $location) {\n    7  \n    8  \n\n/Users/jiar/git/tps/yo/app/scripts/controllers/login.js:\n    3  \n    4  angular.module('tpsApp')\n    5:   .controller('LoginCtrl', function ($scope, $rootScope, Restangular, $location, PersonService) {\n    6  \n    7  	var devMode = true;\n    .\n   10  	// Dev mode, using backdoor token\n   11  	if (devMode) {\n   12: 	  Restangular.setDefaultHeaders({\n   13  		'Auth-Token': devToken\n   14  	  });\n   ..\n   28  	}\n   29  \n   30: 	// If user is logged in, the Restangular call must contain the token\n   31  	if ($rootScope.user) {\n   32  	  console.log('User has a token, user name: %s', $rootScope.user.name);\n   33: 	  Restangular.setDefaultHeaders({\n   34  		'Auth-Token': $rootScope.user.token\n   35  	  });\n   ..\n   42  \n   43  		console.log('login');\n   44: 		$scope.token = Restangular.one('authenticate').get({\n   45  			username: $scope.username,\n   46  			password: $scope.password\n\n/Users/jiar/git/tps/yo/app/scripts/controllers/register.js:\n    1  'use strict';\n    2  \n    3: angular.module('tpsApp').controller('RegisterCtrl', function ($scope, Restangular, $location) {\n    4  	$scope.register = function () {\n    5  		console.log('Register, email: %s', $scope.email);\n    6: 		var promise = Restangular.one('registration').get({ 'email': $scope.email, 'password': $scope.password});\n    7  \n    8  		promise.then(function (token) {\n\n/Users/jiar/git/tps/yo/app/scripts/services/personService.js:\n    2  \n    3  angular.module('tpsApp')\n    4:   .service('PersonService', function PersonService($rootScope, Restangular) {\n    5      var person;\n    6      var svc;\n    7      svc = {\n    8        getPerson: function () {\n    9:         person = Restangular.one('person', 1).get();\n   10          person.then(function (p) {\n   11            person = p;\n\n/Users/jiar/git/tps/yo/app/scripts/services/projectService.js:\n    6  // A future extension could be offline support.\n    7  angular.module('tpsApp')\n    8:   .service('ProjectService', function ProjectService(Restangular, $rootScope, PersonService) {\n    9      var svc;\n   10:     var baseProjects = Restangular.all('project');\n   11      var projects = {};\n   12      var projectsLoaded = false;\n\n/Users/jiar/git/tps/yo/app/scripts/services/timeEntryService.js:\n   10  // * \n   11  angular.module('tpsApp')\n   12:   .service('TimeEntryService', function TimeEntryService($resource, $rootScope, Restangular, ProjectService) {\n   13      var svc;\n   14:     var baseTimeEntries = Restangular.all('timeEntry');\n   15      var selectedDate = new Date().toISOString().substring(0, 10);\n   16      var timeEntries;\n\n665 matches across 22 files\n",
			"settings":
			{
				"buffer_size": 103016,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "app/scripts/app.js",
			"settings":
			{
				"buffer_size": 993,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/spec/controllers/DashboardProjects.js",
			"settings":
			{
				"buffer_size": 1016,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 181.0,
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"swa",
				"Convert Case: Swap Case"
			],
			[
				"qu",
				"BracketHighlighter: Swap Quotes"
			],
			[
				"swap",
				"BracketHighlighter: Swap Quotes"
			],
			[
				"quot",
				"BracketHighlighter: Swap Quotes"
			],
			[
				"form",
				"XML Lint: Format"
			],
			[
				"xmlli",
				"XML Lint: Format"
			],
			[
				"xmll",
				"XML Lint: Format"
			],
			[
				"tid",
				"TidyHTML"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"forma",
				"Format Code"
			],
			[
				"xml",
				"XML Lint: Format"
			],
			[
				"html",
				"TidyHTML"
			],
			[
				"format",
				"Format Code"
			],
			[
				"mark",
				"BracketHighlighter: Match Brackets (ignore threshold)"
			],
			[
				"",
				"BracketHighlighter: Match Brackets (ignore threshold)"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"json",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"quote",
				"BracketHighlighter: Swap Quotes"
			],
			[
				"quo",
				"BracketHighlighter: Swap Quotes"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"html5",
				"Set Syntax: HTML5"
			],
			[
				"lint",
				"XML Lint: Format"
			],
			[
				"goto m",
				"Emmet: Go to Matching Pair"
			],
			[
				"tidy",
				"TidyHTML"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"pack",
				"Package Control: Upgrade Package"
			],
			[
				"package",
				"Package Control: Upgrade Package"
			],
			[
				"for",
				"XML Lint: Format"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"join",
				"Emmet: Split\\Join Tag"
			],
			[
				"inde",
				"Indent XML"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"pacak",
				"Package Control: Remove Package"
			],
			[
				":install",
				"Package Control: Install Package"
			],
			[
				":wq",
				"BracketHighlighter: Swap Quotes"
			],
			[
				":w",
				":w - Save"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"Inst",
				"Package Control: Install Package"
			]
		],
		"width": 507.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": true,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/jiar/git/tps/yo/test/spec/controllers/dashboard.js",
		"/Users/jiar/git/tps/yo/test/spec/directives/ensureUserNameUnique.js",
		"/Users/jiar/git/tps/yo/app/scripts/app.js",
		"/Users/jiar/git/tps/yo/test/spec/controllers/DashboardTimeEntries.js",
		"/Users/jiar/git/tps/yo/karma.conf.js",
		"/Users/jiar/git/tps/yo/package.json",
		"/Users/jiar/git/tps/yo/app/scripts/services/timeEntryService.js",
		"/Users/jiar/git/tps/yo/test/spec/controllers/DashboardProjects.js",
		"/Users/jiar/git/tps/yo/test/spec/services/projectService.js",
		"/Users/jiar/git/tps/yo/test/spec/services/personService.js",
		"/Users/jiar/git/tps/yo/test/spec/services/timeEntryService.js",
		"/Users/jiar/git/tps/yo/test/spec/controllers/login.js",
		"/Users/jiar/git/tps/yo/app/scripts/controllers/DashboardProjects.js",
		"/Users/jiar/git/tps/yo/test/mock/services/ProjectService.js",
		"/Users/jiar/git/tps/yo/app/scripts/services/projectService.js",
		"/Users/jiar/git/tps/yo/app/scripts/controllers/DashboardTimeEntries.js",
		"/Users/jiar/git/tps/yo/app/views/partials/dashboard/timeEntries.html",
		"/Users/jiar/git/tps/yo/app/scripts/controllers/login.js",
		"/Users/jiar/git/tps/yo/app/scripts/services/personService.js",
		"/Users/jiar/git/tps/yo/app/index.html",
		"/Users/jiar/git/tps/yo/app/views/dashboard.html",
		"/Users/jiar/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/Users/jiar/git/tps/yo/app/scripts/controllers/dashboard.js",
		"/Users/jiar/git/tps/yo/app/scripts/directives/ensureUserNameUnique.js",
		"/Users/jiar/git/tps/yo/app/views/register.html",
		"/Users/jiar/git/tps/yo/app/scripts/controllers/register.js",
		"/Users/jiar/git/samples/angular-rest-springsecurity/src/main/webapp/partials/login.html",
		"/Users/jiar/git/samples/angular-rest-springsecurity/src/main/resources/context.xml",
		"/Users/jiar/git/samples/angular-rest-springsecurity/src/main/java/net/dontdrinkandroot/example/angularrestspringsecurity/transfer/UserTransfer.java",
		"/Users/jiar/git/tps/yo/app/bower_components/angular-tokenauth/README.md",
		"/Users/jiar/git/tps/yo/app/bower_components/angular-tokenauth/test/spec/auth.js",
		"/Users/jiar/git/tps/yo/app/bower_components/angular-tokenauth/angular-tokenauth.js",
		"/Users/jiar/git/tps/yo/bower.json",
		"/Users/jiar/git/tps/yo/app/bower_components/angular-webstorage/.bower.json",
		"/Users/jiar/git/tps/yo/app/bower_components/angular-tokenauth/src/authProvider.js",
		"/Users/jiar/git/tps/yo/app/bower_components/angular-tokenauth/.bower.json",
		"/Users/jiar/Library/Application Support/Sublime Text 2/Packages/User/xmllint.sublime-settings",
		"/Users/jiar/Library/Application Support/Sublime Text 2/Packages/xmllint/xmllint.sublime-settings",
		"/Users/jiar/Library/Application Support/Sublime Text 2/Packages/TidyHTML5/TidyHTML.sublime-settings",
		"/Users/jiar/git/tps/yo/app/styles/spinner.css",
		"/Users/jiar/git/tps/yo/app/styles/main.scss",
		"/Users/jiar/git/tps/yo/app/bower_components/angular-http-auth/.bower.json",
		"/Users/jiar/git/tps/yo/app/bower_components/angular-oauth/.bower.json",
		"/Users/jiar/git/tps/yo/app/views/partials/loading.html",
		"/Users/jiar/git/tps/yo/app/views/loading.html",
		"/Users/jiar/git/tps/yo/app/views/partials/project.html",
		"/Users/jiar/git/tps/yo/app/views/partials/loading",
		"/Users/jiar/git/tps/yo/app/fb.html",
		"/Users/jiar/git/tps/yo/app/favicon.ico",
		"/Users/jiar/Library/Application Support/Sublime Text 2/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/jiar/git/tps/yo/app/bower_components/font-awesome/scss/_variables.scss",
		"/Users/jiar/git/tps/yo/.sass-cache/a0f63b71362144b81fd630665372bfe40464d2da/font-awesome.scssc",
		"/Users/jiar/Library/Application Support/Sublime Text 2/Packages/User/Default (OSX).sublime-keymap",
		"/Users/jiar/git/tps/yo/app/bower_components/font-awesome/scss/_path.scss",
		"/Users/jiar/git/tps/yo/app/bower_components/sass-bootstrap/sass/bootstrap.scss",
		"/Users/jiar/git/tps/yo/app/bower_components/sass-bootstrap-glyphicons/bower.json",
		"/Users/jiar/git/tps/yo/.tmp/styles/main.css",
		"/Users/jiar/git/tps/yo/app/bower_components/font-awesome/src/assets/font-awesome/less/variables.less",
		"/Users/jiar/git/tps/yo/node_modules/grunt-contrib-compass/tasks/compass.js",
		"/Users/jiar/git/tps/yo/node_modules/grunt-contrib-compass/tasks/lib/compass.js",
		"/Users/jiar/git/tps/yo/app/bower_components/bootstrap/getting-started.html",
		"/Users/jiar/git/tps/yo/app/bower_components/bootstrap/less/bootstrap.less",
		"/Users/jiar/git/tps/yo/app/scripts/services/Project.js",
		"/Users/jiar/git/tps/yo/app/bower_components/alertify/README.md",
		"/Users/jiar/git/tps/yo/test/spec/services/project.js",
		"/Users/jiar/git/tps/yo/test/spec/controllers/tjohej.js",
		"/Users/jiar/git/tps/yo/app/views/partials/user.html",
		"/Users/jiar/git/tps/yo/app/bower_components/lodash/lodash.js",
		"/Users/jiar/git/tps/yo/app/bower_components/angular-resource/angular-resource.js",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/tps/app/bower_components/angular-local-storage/angular-local-storage.js",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/tps/app/views/dashboard.html",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/tps/app/scripts/controllers/dashboard.js",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/tps/bower.json",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/tps/app/views/register.html",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/tps/app/views/main.html",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/dashboard.html",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/tps/app/views/reports.html",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/tps/app/index.html",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/tps/app/styles/main.scss",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/tps/app/bower_components/bootstrap-sass/lib/bootstrap.scss",
		"/Users/jiar/git/tps/tech-samples/roo/tps-roo-spring-mvc-2/src/main/resources/META-INF/spring/database.properties",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/layouts/standard.html",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/layouts/footer.js",
		"/Users/jiar/git/tps/src/main/resources/log4j.xml",
		"/Users/jiar/git/tps/src/main/java/com/arnellconsulting/tps/model/Contract.java",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/layouts/footer.html",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/landing.html",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/login.html",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/spring/security-config.xml",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/registration/views.xml",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/spring/webmvc-config.xml",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/views.xml",
		"/Users/jiar/git/tps/tech-samples/roo/tps-roo-spring-mvc-2/src/main/java/com/arnellconsulting/tps/webflow/Registration.java",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/registration/registration-flow.xml",
		"/Users/jiar/git/tps/tmp/diff2.html",
		"/Users/jiar/git/tps/tmp/tmp_dashboard.html",
		"/Users/jiar/git/tps/tmp/dashboard.html",
		"/Users/jiar/git/tps/tmp/diff1.html",
		"/Users/jiar/git/tps/docs/Registration pages.pages",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/spring/mail-config.xml",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/spring/mail.properties",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/spring/web-application-config.xml",
		"/Users/jiar/git/tps/tech-samples/roo/tps-roo-spring-mvc/src/main/webapp/WEB-INF/web.xml",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/web.xml",
		"/Users/jiar/git/tps/tech-samples/roo/tps-roo-spring-mvc/src/main/resources/META-INF/spring/applicationContext-security.xml",
		"/Users/jiar/git/tps/src/main/java/com/arnellconsulting/tps/webflow/JpaRegistrationService.java",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/spring/webflow-config.xml",
		"/Users/jiar/git/tps/tech-samples/roo/tps-roo-spring-mvc-2/src/main/resources/META-INF/spring/applicationContext-security.xml",
		"/Users/jiar/git/tps/tech-samples/roo/tps-roo-spring-mvc/src/main/webapp/WEB-INF/views/header.jspx",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/register.html",
		"/Users/jiar/Library/Application Support/Sublime Text 2/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/registration.html",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/layouts/views.xml",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/layouts/header.html",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/intro.html",
		"/Users/jiar/git/tps/src/main/webapp/styles/tps.css",
		"/Users/jiar/tmp/select.sh",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/footer.html",
		"/Users/jiar/git/tps/src/main/webapp/WEB-INF/header.html",
		"/Users/jiar/Desktop/tmp/intro2.html",
		"/Users/jiar/Desktop/tmp/intro.html",
		"/Users/jiar/git/tps/pom.xml",
		"/Users/jiar/git/tps/src/main/webapp/styles/dark_login/style.css",
		"/Users/jiar/git/tps/tech-samples/roo/tps-roo-spring-mvc/src/main/resources/META-INF/spring/email.properties",
		"/Users/jiar/Library/Application Support/Sublime Text 2/Packages/User/SublimeClang.sublime-settings",
		"/Users/jiar/svn/saml2/opensaml/2.5.3/src/test/java/org/opensaml/saml2/binding/decoding/HTTPRedirectDeflateDecoderTest.java",
		"/Users/jiar/svn/saml2/idp2-2/trunk/src/main/java/edu/internet2/middleware/shibboleth/idp/profile/saml2/SSOProfileHandler.java",
		"/Users/jiar/svn/saml2/idp2-2/trunk/src/main/java/edu/internet2/middleware/shibboleth/idp/profile/saml2/BaseSAML2ProfileRequestContext.java"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 95.0,
		"where_history":
		[
			"",
			"/Users/jiar/git/tps/yo/app/scripts,/Users/jiar/git/tps/yo/app/views",
			"<open folders>",
			"app/",
			"",
			"*.html",
			"*",
			"-.tmp/*",
			"-./.tmp/*",
			"-./tmp/*",
			"-./tmp",
			"",
			"/Users/jiar/git/tps/yo/app/scripts",
			"/Users/jiar/git/tps/yo/app",
			"*.js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"restangular",
			"ngResource",
			"ChromeCanary",
			"lru-cache",
			"grunt-karma",
			"test/mock",
			"yo/test/mock",
			"onTimeEntryUpdated",
			"setActive",
			"onProjectUpdated",
			"timeEntries",
			"onTimeEntryUpdated",
			"Starting timer",
			"No active project",
			"No active project ",
			".active",
			"ng-repeat",
			"username",
			"project",
			"active",
			"PersonService",
			"Person is inactive in database",
			"Person is inactive in database ",
			"timeEntryService",
			"project.js",
			"restoreProject",
			"updateActiveProject",
			"LoginService",
			"LoginServiec",
			"timeEntries",
			"backdoor",
			"getTimeEntryById",
			"Failed to locate entry ",
			"Failed to locate entry",
			"Failed to locate entry ",
			".active",
			"User has an active projec",
			"ng-",
			"password",
			"location",
			"login",
			"register",
			"Dobdark",
			"authenticate",
			"resource",
			"LoginService",
			"password",
			"restang",
			"AuthProvider",
			"login",
			"stopProjectTimer",
			"start",
			"controller",
			"ng-show",
			"true",
			"DashboardCtrl",
			"\n      ",
			"newProjectModal",
			"user",
			"project",
			"jquery",
			"Browser",
			"tiles",
			"goto",
			"matching",
			"col-lg",
			"span",
			"col-lg",
			"FontAwesomePath",
			"span",
			"project",
			"FontAwesomePath",
			"webfont",
			"fontawesome",
			"bootstrap-sass",
			"fontawesome-webfont",
			"font-awesome",
			"images_dir",
			"fonts_path",
			"font/",
			"duration",
			"awesome",
			"link",
			".css",
			"[.]css",
			" rel=\"stylesheet\" ",
			"css",
			"stylesheet",
			"remove",
			"person",
			"\"",
			"ngResource",
			"verified",
			"ng-show",
			"start",
			"startTimer",
			"start",
			"restoreProject",
			"rest",
			"saveProject",
			"form",
			"addProject",
			"\"modal-project\"",
			"\"modal-user\"",
			"userPreferencesModal",
			"\n          ",
			"include",
			"\"modal\"",
			"include",
			"timeEntries",
			"data-target",
			"projects",
			"can",
			"delete",
			"database.username",
			"arrowk",
			"Project",
			"DashboardCtrl",
			"font",
			"<",
			"awesome",
			"mysql",
			"validate",
			"\"",
			"\"../",
			"span-",
			"span",
			"username"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\\\"",
			"\"../../"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "test/spec/controllers/DashboardTimeEntries.js",
					"settings":
					{
						"buffer_size": 82,
						"regions":
						{
						},
						"selection":
						[
							[
								77,
								77
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublime_auto_complete": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"settings":
					{
						"buffer_size": 103016,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										155,
										166
									],
									[
										513,
										524
									],
									[
										530,
										541
									],
									[
										837,
										848
									],
									[
										905,
										916
									],
									[
										1092,
										1103
									],
									[
										1231,
										1242
									],
									[
										1428,
										1439
									],
									[
										1505,
										1516
									],
									[
										1623,
										1634
									],
									[
										1691,
										1702
									],
									[
										1878,
										1889
									],
									[
										2093,
										2104
									],
									[
										2244,
										2255
									],
									[
										2281,
										2292
									],
									[
										3078,
										3089
									],
									[
										3103,
										3114
									],
									[
										3217,
										3228
									],
									[
										3234,
										3245
									],
									[
										3291,
										3302
									],
									[
										3340,
										3351
									],
									[
										3534,
										3545
									],
									[
										3936,
										3947
									],
									[
										4127,
										4138
									],
									[
										4252,
										4263
									],
									[
										4512,
										4523
									],
									[
										4639,
										4650
									],
									[
										4702,
										4713
									],
									[
										5049,
										5060
									],
									[
										5346,
										5357
									],
									[
										5532,
										5543
									],
									[
										5641,
										5652
									],
									[
										5919,
										5930
									],
									[
										6222,
										6233
									],
									[
										6603,
										6614
									],
									[
										6917,
										6928
									],
									[
										7071,
										7082
									],
									[
										7208,
										7219
									],
									[
										7254,
										7265
									],
									[
										7323,
										7334
									],
									[
										7494,
										7505
									],
									[
										7621,
										7632
									],
									[
										7694,
										7705
									],
									[
										7741,
										7752
									],
									[
										7872,
										7883
									],
									[
										8006,
										8017
									],
									[
										8146,
										8157
									],
									[
										8629,
										8640
									],
									[
										8698,
										8709
									],
									[
										8712,
										8723
									],
									[
										9008,
										9019
									],
									[
										9062,
										9073
									],
									[
										9111,
										9122
									],
									[
										9131,
										9142
									],
									[
										9170,
										9181
									],
									[
										9205,
										9216
									],
									[
										9285,
										9296
									],
									[
										9311,
										9322
									],
									[
										9545,
										9556
									],
									[
										9572,
										9583
									],
									[
										9929,
										9940
									],
									[
										9952,
										9963
									],
									[
										10255,
										10266
									],
									[
										10344,
										10355
									],
									[
										10482,
										10493
									],
									[
										10504,
										10515
									],
									[
										10771,
										10782
									],
									[
										10806,
										10817
									],
									[
										11087,
										11098
									],
									[
										11163,
										11174
									],
									[
										11863,
										11874
									],
									[
										11932,
										11943
									],
									[
										12096,
										12107
									],
									[
										12135,
										12146
									],
									[
										12181,
										12192
									],
									[
										12220,
										12231
									],
									[
										12470,
										12481
									],
									[
										12759,
										12770
									],
									[
										12986,
										12997
									],
									[
										13672,
										13683
									],
									[
										14040,
										14051
									],
									[
										14185,
										14196
									],
									[
										14512,
										14523
									],
									[
										14600,
										14611
									],
									[
										14742,
										14753
									],
									[
										14772,
										14783
									],
									[
										14802,
										14813
									],
									[
										14996,
										15007
									],
									[
										15192,
										15203
									],
									[
										15249,
										15260
									],
									[
										15387,
										15398
									],
									[
										15411,
										15422
									],
									[
										15507,
										15518
									],
									[
										15531,
										15542
									],
									[
										15640,
										15651
									],
									[
										15811,
										15822
									],
									[
										15830,
										15841
									],
									[
										15923,
										15934
									],
									[
										15942,
										15953
									],
									[
										16102,
										16113
									],
									[
										16120,
										16131
									],
									[
										16213,
										16224
									],
									[
										16231,
										16242
									],
									[
										16323,
										16334
									],
									[
										16593,
										16604
									],
									[
										16634,
										16645
									],
									[
										16668,
										16679
									],
									[
										16810,
										16821
									],
									[
										16852,
										16863
									],
									[
										16953,
										16964
									],
									[
										17115,
										17126
									],
									[
										17213,
										17224
									],
									[
										17265,
										17276
									],
									[
										17448,
										17459
									],
									[
										17518,
										17529
									],
									[
										17775,
										17786
									],
									[
										17848,
										17859
									],
									[
										17972,
										17983
									],
									[
										18043,
										18054
									],
									[
										18284,
										18295
									],
									[
										18437,
										18448
									],
									[
										18646,
										18657
									],
									[
										18772,
										18783
									],
									[
										19007,
										19018
									],
									[
										19151,
										19162
									],
									[
										19206,
										19217
									],
									[
										19336,
										19347
									],
									[
										19385,
										19396
									],
									[
										19613,
										19624
									],
									[
										19638,
										19649
									],
									[
										19738,
										19749
									],
									[
										19774,
										19785
									],
									[
										19976,
										19987
									],
									[
										20566,
										20577
									],
									[
										20820,
										20831
									],
									[
										20865,
										20876
									],
									[
										21282,
										21293
									],
									[
										21473,
										21484
									],
									[
										21607,
										21618
									],
									[
										21675,
										21686
									],
									[
										21720,
										21731
									],
									[
										21992,
										22003
									],
									[
										22200,
										22211
									],
									[
										22474,
										22485
									],
									[
										22588,
										22599
									],
									[
										22889,
										22900
									],
									[
										23199,
										23210
									],
									[
										23493,
										23504
									],
									[
										23693,
										23704
									],
									[
										23726,
										23737
									],
									[
										23767,
										23778
									],
									[
										24017,
										24028
									],
									[
										24109,
										24120
									],
									[
										24306,
										24317
									],
									[
										24577,
										24588
									],
									[
										24729,
										24740
									],
									[
										24941,
										24952
									],
									[
										25336,
										25347
									],
									[
										25645,
										25656
									],
									[
										26122,
										26133
									],
									[
										26147,
										26158
									],
									[
										26266,
										26277
									],
									[
										26300,
										26311
									],
									[
										26354,
										26365
									],
									[
										26411,
										26422
									],
									[
										26559,
										26570
									],
									[
										26755,
										26766
									],
									[
										26823,
										26834
									],
									[
										27010,
										27021
									],
									[
										27110,
										27121
									],
									[
										27133,
										27144
									],
									[
										27198,
										27209
									],
									[
										27290,
										27301
									],
									[
										27398,
										27409
									],
									[
										27675,
										27686
									],
									[
										27962,
										27973
									],
									[
										28007,
										28018
									],
									[
										28120,
										28131
									],
									[
										28388,
										28399
									],
									[
										28620,
										28631
									],
									[
										28652,
										28663
									],
									[
										28718,
										28729
									],
									[
										28794,
										28805
									],
									[
										28853,
										28864
									],
									[
										28876,
										28887
									],
									[
										28907,
										28918
									],
									[
										28939,
										28950
									],
									[
										28975,
										28986
									],
									[
										29150,
										29161
									],
									[
										29167,
										29178
									],
									[
										29291,
										29302
									],
									[
										29491,
										29502
									],
									[
										29721,
										29732
									],
									[
										29795,
										29806
									],
									[
										29867,
										29878
									],
									[
										30017,
										30028
									],
									[
										30161,
										30172
									],
									[
										30290,
										30301
									],
									[
										30491,
										30502
									],
									[
										30540,
										30551
									],
									[
										30581,
										30592
									],
									[
										30633,
										30644
									],
									[
										30957,
										30968
									],
									[
										31086,
										31097
									],
									[
										31174,
										31185
									],
									[
										31478,
										31489
									],
									[
										31784,
										31795
									],
									[
										31913,
										31924
									],
									[
										32568,
										32579
									],
									[
										32657,
										32668
									],
									[
										32910,
										32921
									],
									[
										33026,
										33037
									],
									[
										33381,
										33392
									],
									[
										33464,
										33475
									],
									[
										33874,
										33885
									],
									[
										34137,
										34148
									],
									[
										34477,
										34488
									],
									[
										34572,
										34583
									],
									[
										34727,
										34738
									],
									[
										34750,
										34761
									],
									[
										34919,
										34930
									],
									[
										34996,
										35007
									],
									[
										35412,
										35423
									],
									[
										35565,
										35576
									],
									[
										35585,
										35596
									],
									[
										35738,
										35749
									],
									[
										35854,
										35865
									],
									[
										35999,
										36010
									],
									[
										36155,
										36166
									],
									[
										36263,
										36274
									],
									[
										36512,
										36523
									],
									[
										36766,
										36777
									],
									[
										37148,
										37159
									],
									[
										37306,
										37317
									],
									[
										37598,
										37609
									],
									[
										37870,
										37881
									],
									[
										38052,
										38063
									],
									[
										38260,
										38271
									],
									[
										38442,
										38453
									],
									[
										38524,
										38535
									],
									[
										38667,
										38678
									],
									[
										38874,
										38885
									],
									[
										39085,
										39096
									],
									[
										39162,
										39173
									],
									[
										39273,
										39284
									],
									[
										39452,
										39463
									],
									[
										39592,
										39603
									],
									[
										39786,
										39797
									],
									[
										40175,
										40186
									],
									[
										40288,
										40299
									],
									[
										40468,
										40479
									],
									[
										40722,
										40733
									],
									[
										40855,
										40866
									],
									[
										40975,
										40986
									],
									[
										41329,
										41340
									],
									[
										41433,
										41444
									],
									[
										41456,
										41467
									],
									[
										41596,
										41607
									],
									[
										41862,
										41873
									],
									[
										42167,
										42178
									],
									[
										42208,
										42219
									],
									[
										42491,
										42502
									],
									[
										42551,
										42562
									],
									[
										43204,
										43215
									],
									[
										43369,
										43380
									],
									[
										43475,
										43486
									],
									[
										43531,
										43542
									],
									[
										43741,
										43752
									],
									[
										43864,
										43875
									],
									[
										44076,
										44087
									],
									[
										44353,
										44364
									],
									[
										44566,
										44577
									],
									[
										44617,
										44628
									],
									[
										44820,
										44831
									],
									[
										45031,
										45042
									],
									[
										45082,
										45093
									],
									[
										45356,
										45367
									],
									[
										45521,
										45532
									],
									[
										45548,
										45559
									],
									[
										45723,
										45734
									],
									[
										45747,
										45758
									],
									[
										45856,
										45867
									],
									[
										45965,
										45976
									],
									[
										46037,
										46048
									],
									[
										46099,
										46110
									],
									[
										46285,
										46296
									],
									[
										46466,
										46477
									],
									[
										46664,
										46675
									],
									[
										46852,
										46863
									],
									[
										47063,
										47074
									],
									[
										47308,
										47319
									],
									[
										47345,
										47356
									],
									[
										47477,
										47488
									],
									[
										47552,
										47563
									],
									[
										47712,
										47723
									],
									[
										47941,
										47952
									],
									[
										47972,
										47983
									],
									[
										48099,
										48110
									],
									[
										48168,
										48179
									],
									[
										48336,
										48347
									],
									[
										48577,
										48588
									],
									[
										48653,
										48664
									],
									[
										48862,
										48873
									],
									[
										49029,
										49040
									],
									[
										49289,
										49300
									],
									[
										49593,
										49604
									],
									[
										49702,
										49713
									],
									[
										49720,
										49731
									],
									[
										49956,
										49967
									],
									[
										50035,
										50046
									],
									[
										50102,
										50113
									],
									[
										50199,
										50210
									],
									[
										50229,
										50240
									],
									[
										50485,
										50496
									],
									[
										50578,
										50589
									],
									[
										50776,
										50787
									],
									[
										51006,
										51017
									],
									[
										51131,
										51142
									],
									[
										51371,
										51382
									],
									[
										51535,
										51546
									],
									[
										51753,
										51764
									],
									[
										51961,
										51972
									],
									[
										52101,
										52112
									],
									[
										52326,
										52337
									],
									[
										52344,
										52355
									],
									[
										52629,
										52640
									],
									[
										52681,
										52692
									],
									[
										52699,
										52710
									],
									[
										52894,
										52905
									],
									[
										52946,
										52957
									],
									[
										52964,
										52975
									],
									[
										53102,
										53113
									],
									[
										53188,
										53199
									],
									[
										53332,
										53343
									],
									[
										53474,
										53485
									],
									[
										53514,
										53525
									],
									[
										53619,
										53630
									],
									[
										53721,
										53732
									],
									[
										53821,
										53832
									],
									[
										53910,
										53921
									],
									[
										54078,
										54089
									],
									[
										54239,
										54250
									],
									[
										54257,
										54268
									],
									[
										54522,
										54533
									],
									[
										54628,
										54639
									],
									[
										54716,
										54727
									],
									[
										54799,
										54810
									],
									[
										54817,
										54828
									],
									[
										55194,
										55205
									],
									[
										55433,
										55444
									],
									[
										55678,
										55689
									],
									[
										55966,
										55977
									],
									[
										56183,
										56194
									],
									[
										56545,
										56556
									],
									[
										56563,
										56574
									],
									[
										56633,
										56644
									],
									[
										56759,
										56770
									],
									[
										56792,
										56803
									],
									[
										56886,
										56897
									],
									[
										57120,
										57131
									],
									[
										57138,
										57149
									],
									[
										57232,
										57243
									],
									[
										57394,
										57405
									],
									[
										57454,
										57465
									],
									[
										57661,
										57672
									],
									[
										57929,
										57940
									],
									[
										58118,
										58129
									],
									[
										58332,
										58343
									],
									[
										58648,
										58659
									],
									[
										58666,
										58677
									],
									[
										58760,
										58771
									],
									[
										58909,
										58920
									],
									[
										58942,
										58953
									],
									[
										58997,
										59008
									],
									[
										59183,
										59194
									],
									[
										59350,
										59361
									],
									[
										59674,
										59685
									],
									[
										59914,
										59925
									],
									[
										59945,
										59956
									],
									[
										60012,
										60023
									],
									[
										60046,
										60057
									],
									[
										60359,
										60370
									],
									[
										60553,
										60564
									],
									[
										60582,
										60593
									],
									[
										62332,
										62343
									],
									[
										62352,
										62363
									],
									[
										62426,
										62437
									],
									[
										62449,
										62460
									],
									[
										62508,
										62519
									],
									[
										62547,
										62558
									],
									[
										62579,
										62590
									],
									[
										62608,
										62619
									],
									[
										62908,
										62919
									],
									[
										62991,
										63002
									],
									[
										63135,
										63146
									],
									[
										63225,
										63236
									],
									[
										63430,
										63441
									],
									[
										64111,
										64122
									],
									[
										64141,
										64152
									],
									[
										64197,
										64208
									],
									[
										64239,
										64250
									],
									[
										64266,
										64277
									],
									[
										64290,
										64301
									],
									[
										64340,
										64351
									],
									[
										64376,
										64387
									],
									[
										65222,
										65233
									],
									[
										65529,
										65540
									],
									[
										66725,
										66736
									],
									[
										66762,
										66773
									],
									[
										66780,
										66791
									],
									[
										67171,
										67182
									],
									[
										67203,
										67214
									],
									[
										67246,
										67257
									],
									[
										67463,
										67474
									],
									[
										67614,
										67625
									],
									[
										67659,
										67670
									],
									[
										67998,
										68009
									],
									[
										68016,
										68027
									],
									[
										68237,
										68248
									],
									[
										68255,
										68266
									],
									[
										68375,
										68386
									],
									[
										68393,
										68404
									],
									[
										68559,
										68570
									],
									[
										68973,
										68984
									],
									[
										69013,
										69024
									],
									[
										69077,
										69088
									],
									[
										69143,
										69154
									],
									[
										69199,
										69210
									],
									[
										69217,
										69228
									],
									[
										69491,
										69502
									],
									[
										69537,
										69548
									],
									[
										69555,
										69566
									],
									[
										70030,
										70041
									],
									[
										70142,
										70153
									],
									[
										70271,
										70282
									],
									[
										70386,
										70397
									],
									[
										70404,
										70415
									],
									[
										70433,
										70444
									],
									[
										70473,
										70484
									],
									[
										70530,
										70541
									],
									[
										70548,
										70559
									],
									[
										70590,
										70601
									],
									[
										70746,
										70757
									],
									[
										70802,
										70813
									],
									[
										70993,
										71004
									],
									[
										71011,
										71022
									],
									[
										71046,
										71057
									],
									[
										71086,
										71097
									],
									[
										72649,
										72660
									],
									[
										72685,
										72696
									],
									[
										72886,
										72897
									],
									[
										72937,
										72948
									],
									[
										73140,
										73151
									],
									[
										73351,
										73362
									],
									[
										73402,
										73413
									],
									[
										73676,
										73687
									],
									[
										73841,
										73852
									],
									[
										73868,
										73879
									],
									[
										74043,
										74054
									],
									[
										74067,
										74078
									],
									[
										74176,
										74187
									],
									[
										74285,
										74296
									],
									[
										74357,
										74368
									],
									[
										74419,
										74430
									],
									[
										74605,
										74616
									],
									[
										74786,
										74797
									],
									[
										74984,
										74995
									],
									[
										75172,
										75183
									],
									[
										75383,
										75394
									],
									[
										75628,
										75639
									],
									[
										75665,
										75676
									],
									[
										75797,
										75808
									],
									[
										75872,
										75883
									],
									[
										76032,
										76043
									],
									[
										76261,
										76272
									],
									[
										76292,
										76303
									],
									[
										76419,
										76430
									],
									[
										76488,
										76499
									],
									[
										76656,
										76667
									],
									[
										76897,
										76908
									],
									[
										76973,
										76984
									],
									[
										77182,
										77193
									],
									[
										77349,
										77360
									],
									[
										77609,
										77620
									],
									[
										77913,
										77924
									],
									[
										78022,
										78033
									],
									[
										78040,
										78051
									],
									[
										78276,
										78287
									],
									[
										78355,
										78366
									],
									[
										78422,
										78433
									],
									[
										78519,
										78530
									],
									[
										78549,
										78560
									],
									[
										78805,
										78816
									],
									[
										78898,
										78909
									],
									[
										79096,
										79107
									],
									[
										79326,
										79337
									],
									[
										79451,
										79462
									],
									[
										79691,
										79702
									],
									[
										79855,
										79866
									],
									[
										80073,
										80084
									],
									[
										80281,
										80292
									],
									[
										80421,
										80432
									],
									[
										80646,
										80657
									],
									[
										80664,
										80675
									],
									[
										80949,
										80960
									],
									[
										81001,
										81012
									],
									[
										81019,
										81030
									],
									[
										81214,
										81225
									],
									[
										81266,
										81277
									],
									[
										81284,
										81295
									],
									[
										81422,
										81433
									],
									[
										81508,
										81519
									],
									[
										81652,
										81663
									],
									[
										81794,
										81805
									],
									[
										81834,
										81845
									],
									[
										81939,
										81950
									],
									[
										82041,
										82052
									],
									[
										82141,
										82152
									],
									[
										82230,
										82241
									],
									[
										82398,
										82409
									],
									[
										82559,
										82570
									],
									[
										82577,
										82588
									],
									[
										82842,
										82853
									],
									[
										82948,
										82959
									],
									[
										83036,
										83047
									],
									[
										83119,
										83130
									],
									[
										83137,
										83148
									],
									[
										83514,
										83525
									],
									[
										83753,
										83764
									],
									[
										83998,
										84009
									],
									[
										84286,
										84297
									],
									[
										84503,
										84514
									],
									[
										84865,
										84876
									],
									[
										84883,
										84894
									],
									[
										84953,
										84964
									],
									[
										85079,
										85090
									],
									[
										85112,
										85123
									],
									[
										85206,
										85217
									],
									[
										85440,
										85451
									],
									[
										85458,
										85469
									],
									[
										85552,
										85563
									],
									[
										85714,
										85725
									],
									[
										85774,
										85785
									],
									[
										85981,
										85992
									],
									[
										86249,
										86260
									],
									[
										86438,
										86449
									],
									[
										86652,
										86663
									],
									[
										86968,
										86979
									],
									[
										86986,
										86997
									],
									[
										87080,
										87091
									],
									[
										87229,
										87240
									],
									[
										87262,
										87273
									],
									[
										87317,
										87328
									],
									[
										87503,
										87514
									],
									[
										87670,
										87681
									],
									[
										87994,
										88005
									],
									[
										88234,
										88245
									],
									[
										88265,
										88276
									],
									[
										88332,
										88343
									],
									[
										88366,
										88377
									],
									[
										88560,
										88571
									],
									[
										88616,
										88627
									],
									[
										88671,
										88682
									],
									[
										88692,
										88703
									],
									[
										88713,
										88724
									],
									[
										88822,
										88833
									],
									[
										88894,
										88905
									],
									[
										88997,
										89008
									],
									[
										89060,
										89071
									],
									[
										89124,
										89135
									],
									[
										89262,
										89273
									],
									[
										89459,
										89470
									],
									[
										89614,
										89625
									],
									[
										89721,
										89732
									],
									[
										89745,
										89756
									],
									[
										89914,
										89925
									],
									[
										89977,
										89988
									],
									[
										90108,
										90119
									],
									[
										90137,
										90148
									],
									[
										90163,
										90174
									],
									[
										90185,
										90196
									],
									[
										90225,
										90236
									],
									[
										90247,
										90258
									],
									[
										90290,
										90301
									],
									[
										90312,
										90323
									],
									[
										90495,
										90506
									],
									[
										90581,
										90592
									],
									[
										90623,
										90634
									],
									[
										90781,
										90792
									],
									[
										91023,
										91034
									],
									[
										91121,
										91132
									],
									[
										91159,
										91170
									],
									[
										91296,
										91307
									],
									[
										91567,
										91578
									],
									[
										91863,
										91874
									],
									[
										92160,
										92171
									],
									[
										92454,
										92465
									],
									[
										92643,
										92654
									],
									[
										92894,
										92905
									],
									[
										93080,
										93091
									],
									[
										93374,
										93385
									],
									[
										93528,
										93539
									],
									[
										93716,
										93727
									],
									[
										93831,
										93842
									],
									[
										93873,
										93884
									],
									[
										94051,
										94062
									],
									[
										94132,
										94143
									],
									[
										94191,
										94202
									],
									[
										94353,
										94364
									],
									[
										94461,
										94472
									],
									[
										94524,
										94535
									],
									[
										94702,
										94713
									],
									[
										94812,
										94823
									],
									[
										94876,
										94887
									],
									[
										95037,
										95048
									],
									[
										95129,
										95140
									],
									[
										95166,
										95177
									],
									[
										95308,
										95319
									],
									[
										95556,
										95567
									],
									[
										95716,
										95727
									],
									[
										95782,
										95793
									],
									[
										96042,
										96053
									],
									[
										96244,
										96255
									],
									[
										96369,
										96380
									],
									[
										96530,
										96541
									],
									[
										96622,
										96633
									],
									[
										96683,
										96694
									],
									[
										96703,
										96714
									],
									[
										96792,
										96803
									],
									[
										96813,
										96824
									],
									[
										96936,
										96947
									],
									[
										97061,
										97072
									],
									[
										97126,
										97137
									],
									[
										97250,
										97261
									],
									[
										97349,
										97360
									],
									[
										97370,
										97381
									],
									[
										97524,
										97535
									],
									[
										97746,
										97757
									],
									[
										97920,
										97931
									],
									[
										98130,
										98141
									],
									[
										98301,
										98312
									],
									[
										98512,
										98523
									],
									[
										98809,
										98820
									],
									[
										98944,
										98955
									],
									[
										99248,
										99259
									],
									[
										99378,
										99389
									],
									[
										99593,
										99604
									],
									[
										99674,
										99685
									],
									[
										99862,
										99873
									],
									[
										100018,
										100029
									],
									[
										100052,
										100063
									],
									[
										100366,
										100377
									],
									[
										100570,
										100581
									],
									[
										100728,
										100739
									],
									[
										100867,
										100878
									],
									[
										101028,
										101039
									],
									[
										101188,
										101199
									],
									[
										101466,
										101477
									],
									[
										101614,
										101625
									],
									[
										101928,
										101939
									],
									[
										102067,
										102078
									],
									[
										102385,
										102396
									],
									[
										102477,
										102488
									],
									[
										102772,
										102783
									],
									[
										102856,
										102867
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								99867,
								99867
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"detect_indentation": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"sublime_auto_complete": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 26593.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "app/scripts/app.js",
					"settings":
					{
						"buffer_size": 993,
						"regions":
						{
						},
						"selection":
						[
							[
								361,
								361
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublime_auto_complete": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "test/spec/controllers/DashboardProjects.js",
					"settings":
					{
						"buffer_size": 1016,
						"regions":
						{
						},
						"selection":
						[
							[
								791,
								791
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"codeintel": true,
							"codeintel_config":
							{
								"JavaScript":
								{
									"codeintel_max_recursive_dir_depth": 2.0,
									"codeintel_scan_files_in_project": false,
									"javascriptExtraPaths":
									[
									]
								},
								"PHP":
								{
									"codeintel_max_recursive_dir_depth": 5.0,
									"codeintel_scan_files_in_project": false,
									"phpExtraPaths":
									[
									]
								},
								"Python":
								{
									"env":
									{
									}
								}
							},
							"codeintel_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_live": true,
							"codeintel_live_enabled_languages":
							[
								"JavaScript",
								"Mason",
								"XBL",
								"XUL",
								"RHTML",
								"SCSS",
								"Python",
								"HTML",
								"Ruby",
								"Python3",
								"XML",
								"Sass",
								"XSLT",
								"Django",
								"HTML5",
								"Perl",
								"CSS",
								"Twig",
								"Less",
								"Smarty",
								"Node.js",
								"Tcl",
								"TemplateToolkit",
								"PHP"
							],
							"codeintel_max_recursive_dir_depth": 10.0,
							"codeintel_scan_exclude_dir":
							{
								"JavaScript":
								[
									"/build/",
									"/min/"
								]
							},
							"codeintel_scan_files_in_project": true,
							"codeintel_selected_catalogs":
							[
								"PyWin32",
								"jQuery",
								"Rails"
							],
							"codeintel_snippets": true,
							"codeintel_syntax_map":
							{
								"Python Django": "Python"
							},
							"codeintel_tooltips": "popup",
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110.0
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublime_auto_complete": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2.0,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 36.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 102.0
	},
	"output.find_results":
	{
		"height": 102.0
	},
	"replace":
	{
		"height": 66.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"person",
				"app/scripts/services/personService.js"
			],
			[
				"timeentry",
				"app/scripts/services/timeEntryService.js"
			],
			[
				"da",
				"app/scripts/controllers/dashboard.js"
			],
			[
				"dash",
				"app/views/dashboard.html"
			],
			[
				"login",
				"app/scripts/controllers/login.js"
			],
			[
				"register",
				"app/views/register.html"
			],
			[
				"regis",
				"app/scripts/controllers/register.js"
			],
			[
				"dashboar",
				"app/scripts/controllers/dashboard.js"
			],
			[
				"inde",
				"app/index.html"
			],
			[
				"dashboard",
				"app/views/dashboard.html"
			],
			[
				"app",
				"app/scripts/app.js"
			],
			[
				"bower",
				"bower.json"
			],
			[
				"index",
				"app/index.html"
			],
			[
				"bower.",
				"bower.json"
			],
			[
				"dashbo",
				"app/scripts/controllers/dashboard.js"
			],
			[
				"font",
				".sass-cache/a0f63b71362144b81fd630665372bfe40464d2da/font-awesome.scssc"
			],
			[
				"main",
				"app/styles/main.scss"
			],
			[
				"main.c",
				".tmp/styles/main.css"
			],
			[
				"compass",
				"node_modules/grunt-contrib-compass/tasks/lib/compass.js"
			],
			[
				"bow",
				"bower.json"
			],
			[
				"dasj",
				"app/scripts/controllers/dashboard.js"
			],
			[
				"mysql",
				"target/classes/META-INF/spring/mysql.properties"
			],
			[
				"registration",
				"tech-samples/roo/tps-roo-spring-mvc-2/src/main/java/com/arnellconsulting/tps/webflow/Registration.java"
			],
			[
				"security",
				"tech-samples/roo/tps-roo-spring-mvc/src/main/resources/META-INF/spring/applicationContext-security.xml"
			],
			[
				"jparegistrationservice",
				"src/main/java/com/arnellconsulting/tps/webflow/JpaRegistrationService.java"
			],
			[
				"landin",
				"src/main/webapp/WEB-INF/landing.html"
			],
			[
				"land",
				"src/main/webapp/WEB-INF/landing.html"
			],
			[
				"stand",
				"src/main/webapp/WEB-INF/layouts/standard.html"
			],
			[
				"view",
				"src/main/webapp/WEB-INF/views.xml"
			],
			[
				"samplecpp",
				"libs/spirit/classic/phoenix/example/fundamental/sample5.cpp"
			],
			[
				"sample",
				"libs/filesystem/test/sample_test.cpp"
			],
			[
				"basesamlprofilerequestcontext",
				"idp2-2/trunk/src/main/java/edu/internet2/middleware/shibboleth/idp/profile/saml2/BaseSAML2ProfileRequestContext.java"
			],
			[
				"basesaml2profilerequestcontext.",
				"idp2-2/trunk/src/main/java/edu/internet2/middleware/shibboleth/idp/profile/saml2/BaseSAML2ProfileRequestContext.java"
			],
			[
				"basesaml2profilerequestcontext",
				"idp2-2/trunk/src/main/java/edu/internet2/middleware/shibboleth/idp/profile/saml2/BaseSAML2ProfileRequestContext.java"
			],
			[
				"saml2-post-simplesign-binding.vm",
				"opensaml/2.5.3/src/main/resources/templates/saml2-post-simplesign-binding.vm"
			],
			[
				"webbr",
				"src/main/java/com/smarttrust/licentio/saml/WebBrowserSSO.java"
			],
			[
				"token",
				"src/test/java/com/smarttrust/licentio/authentication/token/TokenUtilsTest.java"
			],
			[
				"openidcon",
				"src/main/java/com/smarttrust/licentio/openid/web/controller/OpenIdProviderController.java"
			],
			[
				"log4j",
				"src/main/resources/log4j.xml"
			],
			[
				"",
				"src/main/java/com/smarttrust/licentio/openid/web/controller/OpenIdProviderController.java"
			],
			[
				"controller",
				"src/main/java/com/smarttrust/licentio/openid/web/controller/OpenIdProviderController.java"
			],
			[
				"licentiouser",
				"src/main/java/com/smarttrust/licentio/springsecurity/LicentioUserDetails.java"
			],
			[
				"install",
				"target/licentio-openid/WEB-INF/authentication/error_userNameProvidedButInvalid.html"
			],
			[
				"logonpa",
				"src/main/java/com/smarttrust/licentio/springsecurity/LicentioAuthenticationProvider.java"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 314.0,
	"status_bar_visible": true
}
